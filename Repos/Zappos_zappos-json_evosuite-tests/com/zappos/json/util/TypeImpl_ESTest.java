/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 14:15:15 GMT 2024
 */

package com.zappos.json.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.util.TypeImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeImpl_ESTest extends TypeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeImpl.getMapImpl((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeImpl.getIterableImpl((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.Reflection", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeImpl typeImpl0 = TypeImpl.getMapImpl(class0);
      assertNotNull(typeImpl0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeImpl typeImpl0 = TypeImpl.getIterableImpl(class0);
      Class<?> class1 = typeImpl0.getInfClass();
      assertFalse(class1.isInterface());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TypeImpl typeImpl0 = TypeImpl.getIterableImpl(class0);
      Class<?> class1 = typeImpl0.getImplClass();
      assertEquals("class java.lang.Object", class1.toString());
  }
}
