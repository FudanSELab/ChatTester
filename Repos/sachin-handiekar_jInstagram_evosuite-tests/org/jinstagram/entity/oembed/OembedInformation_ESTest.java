/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:07:06 GMT 2024
 */

package org.jinstagram.entity.oembed;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.oembed.OembedInformation;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OembedInformation_ESTest extends OembedInformation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setWidth("height=");
      String string0 = oembedInformation0.getWidth();
      assertEquals("height=", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setWidth("");
      String string0 = oembedInformation0.getWidth();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setVersion("org.jinstagram.entity.oembed.OembedInformation");
      String string0 = oembedInformation0.getVersion();
      assertEquals("org.jinstagram.entity.oembed.OembedInformation", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setVersion("");
      String string0 = oembedInformation0.getVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setUrl("liY/");
      String string0 = oembedInformation0.getUrl();
      assertEquals("liY/", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setUrl("");
      String string0 = oembedInformation0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setType("BnvYwbU+yVL).l2zI*y");
      String string0 = oembedInformation0.getType();
      assertEquals("BnvYwbU+yVL).l2zI*y", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setType("");
      String string0 = oembedInformation0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setTitle("OembedInformation [");
      String string0 = oembedInformation0.getTitle();
      assertEquals("OembedInformation [", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setTitle("");
      String string0 = oembedInformation0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setThumbnailWidth(1043);
      int int0 = oembedInformation0.getThumbnailWidth();
      assertEquals(1043, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setThumbnailWidth((-1));
      int int0 = oembedInformation0.getThumbnailWidth();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setThumbnailUrl("");
      String string0 = oembedInformation0.getThumbnailUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setThumbnailHeight(2195);
      int int0 = oembedInformation0.getThumbnailHeight();
      assertEquals(2195, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setThumbnailHeight((-1));
      int int0 = oembedInformation0.getThumbnailHeight();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setProviderUrl("njs");
      String string0 = oembedInformation0.getProviderUrl();
      assertEquals("njs", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setProviderUrl("");
      String string0 = oembedInformation0.getProviderUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setProviderName("provider_name=");
      String string0 = oembedInformation0.getProviderName();
      assertEquals("provider_name=", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setProviderName("");
      String string0 = oembedInformation0.getProviderName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setMediaId("type=");
      String string0 = oembedInformation0.getMediaId();
      assertEquals("type=", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setMediaId("");
      String string0 = oembedInformation0.getMediaId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setHtml("}1p;sK$BD/");
      String string0 = oembedInformation0.getHtml();
      assertEquals("}1p;sK$BD/", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setHtml("");
      String string0 = oembedInformation0.getHtml();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setHeight("BBF");
      String string0 = oembedInformation0.getHeight();
      assertEquals("BBF", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setHeight("");
      String string0 = oembedInformation0.getHeight();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setAuthorUrl(", ");
      String string0 = oembedInformation0.getAuthorUrl();
      assertEquals(", ", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setAuthorName("58z.'As[?\"Rto4J4p");
      String string0 = oembedInformation0.getAuthorName();
      assertEquals("58z.'As[?\"Rto4J4p", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setType("");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [type=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setAuthorUrl("#`O2");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [author_url=#`O2, ]", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setHeight("<%N;%A?Mj;2|xnlLY");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [height=<%N;%A?Mj;2|xnlLY, ]", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setAuthorName("height=");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [author_name=height=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setUrl("j`d,[>EY^Fu");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [url=j`d,[>EY^Fu, ]", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getProviderName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getHtml();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getProviderUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getThumbnailUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getWidth();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setThumbnailUrl("type=");
      String string0 = oembedInformation0.getThumbnailUrl();
      assertEquals("type=", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setVersion("");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [version=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setTitle("a#BVpi[");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [title=a#BVpi[, ]", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setAuthorUrl("");
      String string0 = oembedInformation0.getAuthorUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setWidth(":(y>r|K:A");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [width=:(y>r|K:A, ]", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      int int0 = oembedInformation0.getThumbnailHeight();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setAuthorName("");
      String string0 = oembedInformation0.getAuthorName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getMediaId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setProviderName("/#>gLt");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [provider_name=/#>gLt, ]", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getAuthorName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getHeight();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      int int0 = oembedInformation0.getThumbnailWidth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setMediaId("");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [mediaId=]", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      String string0 = oembedInformation0.getAuthorUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      OembedInformation oembedInformation0 = new OembedInformation();
      oembedInformation0.setProviderUrl("");
      String string0 = oembedInformation0.toString();
      assertEquals("OembedInformation [provider_url=, ]", string0);
  }
}
