/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:14:28 GMT 2024
 */

package org.jinstagram.entity.tags;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.tags.TagInfoData;
import org.jinstagram.entity.tags.TagInfoFeed;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TagInfoFeed_ESTest extends TagInfoFeed_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      TagInfoData tagInfoData0 = new TagInfoData();
      tagInfoData0.setMediaCount(1L);
      tagInfoFeed0.setTagInfo(tagInfoData0);
      TagInfoData tagInfoData1 = tagInfoFeed0.getTagInfo();
      assertEquals(1L, tagInfoData1.getMediaCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      TagInfoData tagInfoData0 = new TagInfoData();
      tagInfoData0.setMediaCount((-1L));
      tagInfoFeed0.setTagInfo(tagInfoData0);
      TagInfoData tagInfoData1 = tagInfoFeed0.getTagInfo();
      assertSame(tagInfoData1, tagInfoData0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      Meta meta0 = new Meta();
      meta0.setCode(2119);
      tagInfoFeed0.setMeta(meta0);
      Meta meta1 = tagInfoFeed0.getMeta();
      assertNull(meta1.getErrorType());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      Meta meta0 = new Meta();
      meta0.setCode((-20));
      tagInfoFeed0.setMeta(meta0);
      Meta meta1 = tagInfoFeed0.getMeta();
      assertEquals((-20), meta1.getCode());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      TagInfoData tagInfoData0 = tagInfoFeed0.getTagInfo();
      assertNull(tagInfoData0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      String string0 = tagInfoFeed0.toString();
      assertEquals("TagInfoFeed [meta=null, tagInfo=null]", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      TagInfoData tagInfoData0 = new TagInfoData();
      tagInfoFeed0.setTagInfo(tagInfoData0);
      TagInfoData tagInfoData1 = tagInfoFeed0.getTagInfo();
      assertSame(tagInfoData1, tagInfoData0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      Meta meta0 = tagInfoFeed0.getMeta();
      assertNull(meta0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TagInfoFeed tagInfoFeed0 = new TagInfoFeed();
      Meta meta0 = new Meta();
      tagInfoFeed0.setMeta(meta0);
      Meta meta1 = tagInfoFeed0.getMeta();
      assertNull(meta1.getErrorType());
  }
}
