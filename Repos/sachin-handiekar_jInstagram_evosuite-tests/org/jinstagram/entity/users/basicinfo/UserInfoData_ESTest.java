/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:24:13 GMT 2024
 */

package org.jinstagram.entity.users.basicinfo;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.users.basicinfo.Counts;
import org.jinstagram.entity.users.basicinfo.UserInfoData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserInfoData_ESTest extends UserInfoData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setBusiness(true);
      boolean boolean0 = userInfoData0.isBusiness();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setWebsite("F2`hZ+f}V1w?sWwI|]");
      String string0 = userInfoData0.getWebsite();
      assertEquals("F2`hZ+f}V1w?sWwI|]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setUsername("D 8} 4");
      String string0 = userInfoData0.getUsername();
      assertEquals("D 8} 4", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setProfilePicture("!`GuK");
      String string0 = userInfoData0.getProfilePicture();
      assertEquals("!`GuK", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setLast_name("5");
      String string0 = userInfoData0.getLastName();
      assertEquals("5", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setId("D 8} 4");
      String string0 = userInfoData0.getId();
      assertEquals("D 8} 4", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setId("");
      String string0 = userInfoData0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setFullName("<m,Tr");
      String string0 = userInfoData0.getFullName();
      assertEquals("<m,Tr", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setFullName("");
      String string0 = userInfoData0.getFullName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setFirstName("D 8} 4");
      String string0 = userInfoData0.getFirstName();
      assertEquals("D 8} 4", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setFirstName("");
      String string0 = userInfoData0.getFirstName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      Counts counts0 = new Counts();
      counts0.setMedia(2888);
      userInfoData0.setCounts(counts0);
      Counts counts1 = userInfoData0.getCounts();
      assertEquals(0, counts1.getFollowedBy());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      Counts counts0 = new Counts();
      counts0.setMedia((-1275));
      userInfoData0.setCounts(counts0);
      Counts counts1 = userInfoData0.getCounts();
      assertSame(counts1, counts0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      Counts counts0 = new Counts();
      counts0.setFollows(3);
      userInfoData0.setCounts(counts0);
      Counts counts1 = userInfoData0.getCounts();
      assertEquals(0, counts1.getMedia());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      Counts counts0 = new Counts();
      counts0.setFollows((-830));
      userInfoData0.setCounts(counts0);
      Counts counts1 = userInfoData0.getCounts();
      assertEquals(0, counts1.getMedia());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      Counts counts0 = new Counts();
      counts0.setFollowedBy(3);
      userInfoData0.setCounts(counts0);
      Counts counts1 = userInfoData0.getCounts();
      assertEquals(0, counts1.getFollows());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      Counts counts0 = new Counts();
      counts0.setFollowedBy((-3685));
      userInfoData0.setCounts(counts0);
      Counts counts1 = userInfoData0.getCounts();
      assertEquals(0, counts1.getMedia());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setBio("F2`hZ+f}V1w?sWwI|]");
      String string0 = userInfoData0.getBio();
      assertEquals("F2`hZ+f}V1w?sWwI|]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.toString();
      assertEquals("UserInfoData [bio=null, counts=null, first_name=null, id=null, last_name=null, profile_picture=null, username=null, fullName=null, website=null, isBusiness=false]", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setBio("");
      String string0 = userInfoData0.getBio();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.getBio();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.getWebsite();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.getFullName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      Counts counts0 = userInfoData0.getCounts();
      assertNull(counts0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setWebsite("");
      String string0 = userInfoData0.getWebsite();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.getProfilePicture();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      boolean boolean0 = userInfoData0.isBusiness();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.getLastName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setUsername("");
      String string0 = userInfoData0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      String string0 = userInfoData0.getFirstName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setLast_name("");
      String string0 = userInfoData0.getLastName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UserInfoData userInfoData0 = new UserInfoData();
      userInfoData0.setProfilePicture("");
      String string0 = userInfoData0.getProfilePicture();
      assertEquals("", string0);
  }
}
