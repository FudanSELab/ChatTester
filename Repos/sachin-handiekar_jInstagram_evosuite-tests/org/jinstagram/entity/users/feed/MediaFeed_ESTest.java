/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:28:18 GMT 2024
 */

package org.jinstagram.entity.users.feed;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MediaFeed_ESTest extends MediaFeed_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      Meta meta0 = new Meta();
      meta0.setCode(913);
      mediaFeed0.setMeta(meta0);
      Meta meta1 = mediaFeed0.getMeta();
      assertNull(meta1.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      Meta meta0 = new Meta();
      meta0.setCode((-2452));
      mediaFeed0.setMeta(meta0);
      Meta meta1 = mediaFeed0.getMeta();
      assertEquals((-2452), meta1.getCode());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      LinkedList<MediaFeedData> linkedList0 = new LinkedList<MediaFeedData>();
      linkedList0.add((MediaFeedData) null);
      mediaFeed0.setData(linkedList0);
      List<MediaFeedData> list0 = mediaFeed0.getData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      Pagination pagination0 = new Pagination();
      mediaFeed0.setPagination(pagination0);
      Pagination pagination1 = mediaFeed0.getPagination();
      assertNull(pagination1.getNextMaxTagId());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      List<MediaFeedData> list0 = mediaFeed0.getData();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      String string0 = mediaFeed0.toString();
      assertEquals("MediaFeed [data=null, meta=null, pagination=null]", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      LinkedList<MediaFeedData> linkedList0 = new LinkedList<MediaFeedData>();
      mediaFeed0.setData(linkedList0);
      List<MediaFeedData> list0 = mediaFeed0.getData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      Meta meta0 = new Meta();
      mediaFeed0.setMeta(meta0);
      Meta meta1 = mediaFeed0.getMeta();
      assertSame(meta1, meta0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      Meta meta0 = mediaFeed0.getMeta();
      assertNull(meta0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MediaFeed mediaFeed0 = new MediaFeed();
      Pagination pagination0 = mediaFeed0.getPagination();
      assertNull(pagination0);
  }
}
