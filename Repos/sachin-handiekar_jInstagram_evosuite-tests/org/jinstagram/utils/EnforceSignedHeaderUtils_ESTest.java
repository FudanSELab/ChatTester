/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:10:05 GMT 2024
 */

package org.jinstagram.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.utils.EnforceSignedHeaderUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EnforceSignedHeaderUtils_ESTest extends EnforceSignedHeaderUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnforceSignedHeaderUtils.signature("Key is null!", "&AW`W@+wB}+~F,~rj^ ");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/codec/binary/Hex
         //
         verifyException("org.jinstagram.utils.EnforceSignedHeaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      try { 
        EnforceSignedHeaderUtils.signature((String) null, "X-Insta-Forwarded-For");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Key is null!
         //
         verifyException("org.jinstagram.utils.EnforceSignedHeaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EnforceSignedHeaderUtils enforceSignedHeaderUtils0 = new EnforceSignedHeaderUtils();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnforceSignedHeaderUtils.signature("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }
}
