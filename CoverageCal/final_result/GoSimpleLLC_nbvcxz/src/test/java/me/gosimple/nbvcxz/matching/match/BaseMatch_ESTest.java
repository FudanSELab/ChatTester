/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:19:58 GMT 2024
 */
package me.gosimple.nbvcxz.matching.match;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Map;
import java.util.regex.Pattern;
import me.gosimple.nbvcxz.matching.PasswordMatcher;
import me.gosimple.nbvcxz.matching.match.BaseMatch;
import me.gosimple.nbvcxz.matching.match.BruteForceMatch;
import me.gosimple.nbvcxz.matching.match.DictionaryMatch;
import me.gosimple.nbvcxz.matching.match.RepeatMatch;
import me.gosimple.nbvcxz.matching.match.SequenceMatch;
import me.gosimple.nbvcxz.matching.match.SpacialMatch;
import me.gosimple.nbvcxz.matching.match.YearMatch;
import me.gosimple.nbvcxz.resources.AdjacencyGraph;
import me.gosimple.nbvcxz.resources.Configuration;
import me.gosimple.nbvcxz.resources.Dictionary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class BaseMatch_ESTest extends BaseMatch_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test13() throws Throwable {
        RepeatMatch repeatMatch0 = new RepeatMatch("4", (Configuration) null, "rzBI_EA+", (-19), 1);
        double double0 = repeatMatch0.getAverageEntropy();
        assertEquals((-19), repeatMatch0.getStartIndex());
        assertEquals(0.0, double0, 0.01);
        assertEquals(1, repeatMatch0.getEndIndex());
    }
    
    @Test(timeout = 4000)
    public void test13() throws Throwable {
        RepeatMatch repeatMatch0 = new RepeatMatch("4", (Configuration) null, "rzBI_EA+", (-19), 1);
        double double0 = repeatMatch0.getAverageEntropy();
        assertEquals((-19), repeatMatch0.getStartIndex());
        assertEquals(0.0, double0, 0.01);
        assertEquals(1, repeatMatch0.getEndIndex());
    }
    
    @Test(timeout = 4000)
    public void test13() throws Throwable {
        RepeatMatch repeatMatch0 = new RepeatMatch("4", (Configuration) null, "rzBI_EA+", (-19), 1);
        double double0 = repeatMatch0.getAverageEntropy();
        assertEquals((-19), repeatMatch0.getStartIndex());
        assertEquals(0.0, double0, 0.01);
        assertEquals(1, repeatMatch0.getEndIndex());
    }
    
    @Test(timeout = 4000)
    public void test02() throws Throwable {
        long long0 = BaseMatch.nCk(28, 28);
        assertEquals(1L, long0);
    }
    
    @Test(timeout = 4000)
    public void test03() throws Throwable {
        double double0 = BaseMatch.log2(1.0);
        assertEquals(0.0, double0, 0.01);
    }
    
    @Test(timeout = 4000)
    public void test06() throws Throwable {
        SequenceMatch sequenceMatch0 = new SequenceMatch("d", (Configuration) null, 1067, 0);
        sequenceMatch0.getToken();
        assertEquals(0, sequenceMatch0.getEndIndex());
        assertEquals(4.700439718141093, sequenceMatch0.getAverageEntropy(), 0.01);
        assertEquals(1067, sequenceMatch0.getStartIndex());
    }
}
