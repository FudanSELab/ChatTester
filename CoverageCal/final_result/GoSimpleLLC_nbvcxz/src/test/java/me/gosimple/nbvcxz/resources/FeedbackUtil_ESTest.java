/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:08:13 GMT 2024
 */
package me.gosimple.nbvcxz.resources;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.regex.Pattern;
import me.gosimple.nbvcxz.matching.PasswordMatcher;
import me.gosimple.nbvcxz.matching.match.DateMatch;
import me.gosimple.nbvcxz.matching.match.DictionaryMatch;
import me.gosimple.nbvcxz.matching.match.Match;
import me.gosimple.nbvcxz.matching.match.RepeatMatch;
import me.gosimple.nbvcxz.matching.match.SequenceMatch;
import me.gosimple.nbvcxz.matching.match.SpacialMatch;
import me.gosimple.nbvcxz.matching.match.YearMatch;
import me.gosimple.nbvcxz.resources.AdjacencyGraph;
import me.gosimple.nbvcxz.resources.Configuration;
import me.gosimple.nbvcxz.resources.Dictionary;
import me.gosimple.nbvcxz.resources.Feedback;
import me.gosimple.nbvcxz.resources.FeedbackUtil;
import me.gosimple.nbvcxz.scoring.Result;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class FeedbackUtil_ESTest extends FeedbackUtil_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test04() throws Throwable {
        LinkedList<PasswordMatcher> linkedList0 = new LinkedList<PasswordMatcher>();
        HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
        LinkedList<Dictionary> linkedList1 = new LinkedList<Dictionary>();
        LinkedList<AdjacencyGraph> linkedList2 = new LinkedList<AdjacencyGraph>();
        HashMap<Character, Character[]> hashMap1 = new HashMap<Character, Character[]>();
        HashMap<String, Integer> hashMap2 = new HashMap<String, Integer>();
        Dictionary dictionary0 = new Dictionary("aE>Y", hashMap2, false);
        linkedList1.addLast(dictionary0);
        Pattern pattern0 = Pattern.compile("aE>Y");
        Double double0 = Double.valueOf((double) 103);
        Locale locale0 = Locale.CANADA;
        LinkedList<Match> linkedList3 = new LinkedList<Match>();
        Integer integer0 = new Integer(103);
        Configuration configuration0 = new Configuration(linkedList0, hashMap0, linkedList1, linkedList2, hashMap1, pattern0, double0, integer0, locale0, false, 103);
        LinkedList<Character[]> linkedList4 = new LinkedList<Character[]>();
        DictionaryMatch dictionaryMatch0 = new DictionaryMatch("aE>Y", configuration0, 103, 103, "aE>Y", 103, linkedList4, false, false, "aE>Y", 103);
        linkedList3.add((Match) dictionaryMatch0);
        Result result0 = new Result(configuration0, "aE>Y", ".", linkedList3);
        Feedback feedback0 = FeedbackUtil.getFeedback(result0);
        assertEquals("main.feedback.insecure", feedback0.getResult());
        assertEquals("feedback.dictionary.warning.passwords.veryCommon", feedback0.getWarningKey());
    }
}
