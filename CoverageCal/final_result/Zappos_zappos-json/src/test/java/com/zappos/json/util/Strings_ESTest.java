/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 14:13:31 GMT 2024
 */
package com.zappos.json.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.util.Strings;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Strings_ESTest extends Strings_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test26() throws Throwable {
        boolean boolean0 = Strings.isNumber("-|{Z&d1");
        assertFalse(boolean0);
    }
    
    @Test(timeout = 4000)
    public void test09() throws Throwable {
        Strings.randomNumber(5026);
        // Undeclared exception!
        Strings.randomNumber(5026);
    }
    
    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Strings.randomAlphabetic(5028);
        // Undeclared exception!
        Strings.randomAlphabetic(5028);
    }
    
    @Test(timeout = 4000)
    public void test30() throws Throwable {
        char[] charArray0 = new char[4];
        String string0 = Strings.random(22, charArray0);
        assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
    }
    
    @Test(timeout = 4000)
    public void test06() throws Throwable {
        StringReader stringReader0 = new StringReader("!!n$d3!sd#&|iK");
        String string0 = Strings.fromReader((Reader) stringReader0, 1);
        assertEquals("!!n$d3!sd#&|iK", string0);
    }
}
