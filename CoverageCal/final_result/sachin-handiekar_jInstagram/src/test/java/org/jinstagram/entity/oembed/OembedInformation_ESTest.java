/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:07:06 GMT 2024
 */
package org.jinstagram.entity.oembed;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.oembed.OembedInformation;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class OembedInformation_ESTest extends OembedInformation_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test45() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setWidth(":(y>r|K:A");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [width=:(y>r|K:A, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setWidth("height=");
        String string0 = oembedInformation0.getWidth();
        assertEquals("height=", string0);
    }
    
    @Test(timeout = 4000)
    public void test42() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setVersion("");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [version=, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test31() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setUrl("j`d,[>EY^Fu");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [url=j`d,[>EY^Fu, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test04() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setUrl("liY/");
        String string0 = oembedInformation0.getUrl();
        assertEquals("liY/", string0);
    }
    
    @Test(timeout = 4000)
    public void test27() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setType("");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [type=, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test06() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setType("BnvYwbU+yVL).l2zI*y");
        String string0 = oembedInformation0.getType();
        assertEquals("BnvYwbU+yVL).l2zI*y", string0);
    }
    
    @Test(timeout = 4000)
    public void test43() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setTitle("a#BVpi[");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [title=a#BVpi[, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test08() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setTitle("OembedInformation [");
        String string0 = oembedInformation0.getTitle();
        assertEquals("OembedInformation [", string0);
    }
    
    @Test(timeout = 4000)
    public void test10() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setThumbnailWidth(1043);
        int int0 = oembedInformation0.getThumbnailWidth();
        assertEquals(1043, int0);
    }
    
    @Test(timeout = 4000)
    public void test10() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setThumbnailWidth(1043);
        int int0 = oembedInformation0.getThumbnailWidth();
        assertEquals(1043, int0);
    }
    
    @Test(timeout = 4000)
    public void test12() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setThumbnailUrl("");
        String string0 = oembedInformation0.getThumbnailUrl();
        assertEquals("", string0);
    }
    
    @Test(timeout = 4000)
    public void test12() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setThumbnailUrl("");
        String string0 = oembedInformation0.getThumbnailUrl();
        assertEquals("", string0);
    }
    
    @Test(timeout = 4000)
    public void test13() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setThumbnailHeight(2195);
        int int0 = oembedInformation0.getThumbnailHeight();
        assertEquals(2195, int0);
    }
    
    @Test(timeout = 4000)
    public void test13() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setThumbnailHeight(2195);
        int int0 = oembedInformation0.getThumbnailHeight();
        assertEquals(2195, int0);
    }
    
    @Test(timeout = 4000)
    public void test55() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setProviderUrl("");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [provider_url=, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test15() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setProviderUrl("njs");
        String string0 = oembedInformation0.getProviderUrl();
        assertEquals("njs", string0);
    }
    
    @Test(timeout = 4000)
    public void test49() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setProviderName("/#>gLt");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [provider_name=/#>gLt, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test17() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setProviderName("provider_name=");
        String string0 = oembedInformation0.getProviderName();
        assertEquals("provider_name=", string0);
    }
    
    @Test(timeout = 4000)
    public void test53() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setMediaId("");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [mediaId=]", string0);
    }
    
    @Test(timeout = 4000)
    public void test19() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setMediaId("type=");
        String string0 = oembedInformation0.getMediaId();
        assertEquals("type=", string0);
    }
    
    @Test(timeout = 4000)
    public void test21() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setHtml("}1p;sK$BD/");
        String string0 = oembedInformation0.getHtml();
        assertEquals("}1p;sK$BD/", string0);
    }
    
    @Test(timeout = 4000)
    public void test21() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setHtml("}1p;sK$BD/");
        String string0 = oembedInformation0.getHtml();
        assertEquals("}1p;sK$BD/", string0);
    }
    
    @Test(timeout = 4000)
    public void test29() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setHeight("<%N;%A?Mj;2|xnlLY");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [height=<%N;%A?Mj;2|xnlLY, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test23() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setHeight("BBF");
        String string0 = oembedInformation0.getHeight();
        assertEquals("BBF", string0);
    }
    
    @Test(timeout = 4000)
    public void test28() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setAuthorUrl("#`O2");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [author_url=#`O2, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test25() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setAuthorUrl(", ");
        String string0 = oembedInformation0.getAuthorUrl();
        assertEquals(", ", string0);
    }
    
    @Test(timeout = 4000)
    public void test30() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setAuthorName("height=");
        String string0 = oembedInformation0.toString();
        assertEquals("OembedInformation [author_name=height=, ]", string0);
    }
    
    @Test(timeout = 4000)
    public void test26() throws Throwable {
        OembedInformation oembedInformation0 = new OembedInformation();
        oembedInformation0.setAuthorName("58z.'As[?\"Rto4J4p");
        String string0 = oembedInformation0.getAuthorName();
        assertEquals("58z.'As[?\"Rto4J4p", string0);
    }
}
