/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:01:44 GMT 2024
 */
package technology.tabula;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import technology.tabula.QuickSort;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class QuickSort_ESTest extends QuickSort_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        PageDims pageDims0 = PageDims.of(0.0F, 0.0F, 0.0F, (-2690.3118F));
        float float0 = pageDims0.getWidth();
        assertEquals(0.0F, pageDims0.getTop(), 0.01F);
        assertEquals(0.0F, pageDims0.getLeft(), 0.01F);
        assertEquals(0.0F, float0, 0.01F);
        assertEquals((-2690.3118F), pageDims0.getHeight(), 0.01F);
    }
    
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        PageDims pageDims0 = PageDims.of(0.0F, 0.0F, 0.0F, (-2690.3118F));
        float float0 = pageDims0.getWidth();
        assertEquals(0.0F, pageDims0.getTop(), 0.01F);
        assertEquals(0.0F, pageDims0.getLeft(), 0.01F);
        assertEquals(0.0F, float0, 0.01F);
        assertEquals((-2690.3118F), pageDims0.getHeight(), 0.01F);
    }
    
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        PageDims pageDims0 = PageDims.of(0.0F, 0.0F, 0.0F, (-2690.3118F));
        float float0 = pageDims0.getWidth();
        assertEquals(0.0F, pageDims0.getTop(), 0.01F);
        assertEquals(0.0F, pageDims0.getLeft(), 0.01F);
        assertEquals(0.0F, float0, 0.01F);
        assertEquals((-2690.3118F), pageDims0.getHeight(), 0.01F);
    }
}
