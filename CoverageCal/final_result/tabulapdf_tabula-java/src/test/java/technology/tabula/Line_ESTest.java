/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 09:53:47 GMT 2024
 */
package technology.tabula;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.Line;
import technology.tabula.TextChunk;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Line_ESTest extends Line_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test02() throws Throwable {
        Line line0 = new Line();
        Character character0 = Character.valueOf('3');
        TextChunk textChunk0 = new TextChunk(0.0F, 1.0F, 0.0F, '3');
        List<TextChunk> list0 = textChunk0.squeeze(character0, (-1019));
        line0.setTextElements(list0);
        Line line1 = Line.removeRepeatedCharacters(line0, character0, 11);
        assertEquals(1.0F, line1.x, 0.01F);
    }
    
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Line line0 = new Line();
        TextChunk textChunk0 = new TextChunk(236.93358F, 0.0F, 0.0F, 0.0F);
        List<TextChunk> list0 = textChunk0.squeeze((Character) null, 339);
        line0.setTextElements(list0);
        line0.addTextChunk(textChunk0);
        line0.addTextChunk(0, textChunk0);
        assertEquals(236.93358F, line0.height, 0.01F);
    }
    
    @Test(timeout = 4000)
    public void test12() throws Throwable {
        Line line0 = new Line();
        TextChunk textChunk0 = TextChunk.EMPTY;
        line0.addTextChunk(0, textChunk0);
        Character character0 = Character.valueOf('T');
        Line line1 = Line.removeRepeatedCharacters(line0, character0, 0);
        assertNotSame(line1, line0);
    }
    
    @Test(timeout = 4000)
    public void test06() throws Throwable {
        Line line0 = new Line();
        TextChunk textChunk0 = TextChunk.EMPTY;
        line0.addTextChunk(0, textChunk0);
        List<TextChunk> list0 = line0.getTextElements();
        assertEquals(1, list0.size());
    }
    
    @Test(timeout = 4000)
    public void test13() throws Throwable {
        Line line0 = new Line();
        TextChunk textChunk0 = TextChunk.EMPTY;
        line0.addTextChunk(0, textChunk0);
        String string0 = line0.toString();
        assertEquals("technology.tabula.Line[x=0.0,y=0.0,w=0.0,h=0.0,bottom=0.000000,right=0.000000,chunks='', ]", string0);
    }
}
