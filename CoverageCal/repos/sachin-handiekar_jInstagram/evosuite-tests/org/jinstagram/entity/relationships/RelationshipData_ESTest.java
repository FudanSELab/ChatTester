/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:09:00 GMT 2024
 */

package org.jinstagram.entity.relationships;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.relationships.RelationshipData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class RelationshipData_ESTest extends RelationshipData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      relationshipData0.setTargetUserPrivate(true);
      boolean boolean0 = relationshipData0.isTargetUserPrivate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      relationshipData0.setOutgoingStatus("RelationshipData [incomingStatus=, outgoingStatus=]");
      String string0 = relationshipData0.getOutgoingStatus();
      assertEquals("RelationshipData [incomingStatus=, outgoingStatus=]", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      relationshipData0.setOutgoingStatus("");
      String string0 = relationshipData0.getOutgoingStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      relationshipData0.setIncomingStatus("uE$>&0=U:[/f");
      String string0 = relationshipData0.getIncomingStatus();
      assertEquals("uE$>&0=U:[/f", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      relationshipData0.setIncomingStatus("");
      String string0 = relationshipData0.getIncomingStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      String string0 = relationshipData0.getIncomingStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      String string0 = relationshipData0.getOutgoingStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      boolean boolean0 = relationshipData0.isTargetUserPrivate();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RelationshipData relationshipData0 = new RelationshipData();
      String string0 = relationshipData0.toString();
      assertEquals("RelationshipData [incomingStatus=null, outgoingStatus=null]", string0);
  }
}
