/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 14:13:31 GMT 2024
 */
package com.zappos.json.util;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.util.Strings;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Strings_ESTest extends Strings_ESTest_scaffolding {


@Test(timeout = 4000)
public void test10() throws Throwable {
    // Undeclared exception!
    try {
        Strings.randomNumber((-1259));
        fail("Expecting exception: NegativeArraySizeException");
    } catch (NegativeArraySizeException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
        verifyException("com.zappos.json.util.Strings", e);
    }
}


@Test(timeout = 4000)
public void test16() throws Throwable {
    // Undeclared exception!
    try {
        Strings.fromReader((Reader) null, 39);
        fail("Expecting exception: NullPointerException");
    } catch (NullPointerException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
        verifyException("com.zappos.json.util.Strings", e);
    }
}


@Test(timeout = 4000)
public void test27() throws Throwable {
    boolean boolean0 = Strings.isNumber("");
    assertFalse(boolean0);
}


@Test(timeout = 4000)
public void test15() throws Throwable {
    char[] charArray0 = new char[0];
    // Undeclared exception!
    try {
        Strings.random(2821, charArray0);
        fail("Expecting exception: ArithmeticException");
    } catch (ArithmeticException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
    }
}


@Test(timeout = 4000)
public void test12() throws Throwable {
    // Undeclared exception!
    try {
        Strings.randomAlphabetic((-1176));
        fail("Expecting exception: NegativeArraySizeException");
    } catch (NegativeArraySizeException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
        verifyException("com.zappos.json.util.Strings", e);
    }
}


@Test(timeout = 4000)
public void test31() throws Throwable {
    String string0 = Strings.format("", (Object[]) null);
    assertEquals("", string0);
}


@Test(timeout = 4000)
public void test19() throws Throwable {
    // Undeclared exception!
    try {
        Strings.fromReader((Reader) null);
        fail("Expecting exception: NullPointerException");
    } catch (NullPointerException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
        verifyException("com.zappos.json.util.Strings", e);
    }
}

}
