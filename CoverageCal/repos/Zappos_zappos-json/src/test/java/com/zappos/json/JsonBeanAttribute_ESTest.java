/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:48:09 GMT 2024
 */
package com.zappos.json;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.JsonBeanAttribute;
import com.zappos.json.annot.JsonEnum;
import com.zappos.json.format.JavaDateFormatter;
import com.zappos.json.format.ValueFormatter;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class JsonBeanAttribute_ESTest extends JsonBeanAttribute_ESTest_scaffolding {


@Test(timeout = 4000)
public void test03() throws Throwable {
    JsonBeanAttribute jsonBeanAttribute0 = new JsonBeanAttribute();
    JsonEnum.EnumValue jsonEnum_EnumValue0 = JsonEnum.EnumValue.STRING;
    JsonBeanAttribute jsonBeanAttribute1 = jsonBeanAttribute0.setEnumValue(jsonEnum_EnumValue0);
    JsonEnum.EnumValue jsonEnum_EnumValue1 = jsonBeanAttribute1.getEnumValue();
    assertEquals(JsonEnum.EnumValue.STRING, jsonEnum_EnumValue1);
}


@Test(timeout = 4000)
public void test13() throws Throwable {
    JsonBeanAttribute jsonBeanAttribute0 = new JsonBeanAttribute();
    Class<JavaDateFormatter> class0 = JavaDateFormatter.class;
    JsonBeanAttribute jsonBeanAttribute1 = jsonBeanAttribute0.setFormatterClass(class0);
    Class<? extends ValueFormatter<?>> class1 = jsonBeanAttribute1.getFormatterClass();
    assertEquals("class com.zappos.json.format.JavaDateFormatter", class1.toString());
}


@Test(timeout = 4000)
public void test02() throws Throwable {
    JsonBeanAttribute jsonBeanAttribute0 = new JsonBeanAttribute();
    JsonBeanAttribute jsonBeanAttribute1 = jsonBeanAttribute0.setFormatterPattern("");
    String string0 = jsonBeanAttribute1.getFormatterPattern();
    assertEquals("", string0);
}


@Test(timeout = 4000)
public void test09() throws Throwable {
    JsonBeanAttribute jsonBeanAttribute0 = new JsonBeanAttribute();
    Method method0 = jsonBeanAttribute0.getMethod();
    assertNull(method0);
}


@Test(timeout = 4000)
public void test07() throws Throwable {
    JsonBeanAttribute jsonBeanAttribute0 = new JsonBeanAttribute();
    Field field0 = jsonBeanAttribute0.getField();
    assertNull(field0);
}


@Test(timeout = 4000)
public void test04() throws Throwable {
    JsonBeanAttribute jsonBeanAttribute0 = new JsonBeanAttribute();
    JsonBeanAttribute jsonBeanAttribute1 = jsonBeanAttribute0.setAttributeKey("q>vG|5PRl$yzt");
    String string0 = jsonBeanAttribute1.getAttributeKey();
    assertEquals("q>vG|5PRl$yzt", string0);
}


@Test(timeout = 4000)
public void test12() throws Throwable {
    JsonBeanAttribute jsonBeanAttribute0 = new JsonBeanAttribute();
    JsonBeanAttribute jsonBeanAttribute1 = jsonBeanAttribute0.setJsonKey("");
    String string0 = jsonBeanAttribute1.getJsonKey();
    assertEquals("", string0);
}

}
