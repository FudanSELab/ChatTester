/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:44:18 GMT 2024
 */
package com.zappos.json.format;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.JavaTimestampFormatter;
import com.zappos.json.format.ValueFormatter;
import java.sql.Timestamp;
import java.text.ParseException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class JavaTimestampFormatter_ESTest extends JavaTimestampFormatter_ESTest_scaffolding {


@Test(timeout = 4000)
public void test02() throws Throwable {
    JavaTimestampFormatter javaTimestampFormatter0 = new JavaTimestampFormatter();
    ZapposJson zapposJson0 = ZapposJson.getInstance();
    Timestamp timestamp0 = javaTimestampFormatter0.parse(zapposJson0, "5");
    Timestamp timestamp1 = javaTimestampFormatter0.cast(timestamp0);
    assertSame(timestamp0, timestamp1);
}


@Test(timeout = 4000)
public void test00() throws Throwable {
    JavaTimestampFormatter javaTimestampFormatter0 = new JavaTimestampFormatter();
    ZapposJson zapposJson0 = ZapposJson.getInstance();
    Timestamp timestamp0 = new Timestamp(0L);
    String string0 = javaTimestampFormatter0.format(zapposJson0, timestamp0);
    assertEquals("0", string0);
}

}
