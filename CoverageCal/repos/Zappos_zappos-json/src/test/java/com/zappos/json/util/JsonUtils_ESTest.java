/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 14:07:05 GMT 2024
 */
package com.zappos.json.util;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.util.JsonUtils;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class JsonUtils_ESTest extends JsonUtils_ESTest_scaffolding {


@Test(timeout = 4000)
public void test16() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    stringWriter0.write(128);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    ZapposJson zapposJson0 = ZapposJson.getInstance("KU/\";l");
    String string0 = JsonUtils.escape(zapposJson0, (CharSequence) stringBuffer0);
    assertEquals("\u0080", string0);
}


@Test(timeout = 4000)
public void test14() throws Throwable {
    ZapposJson zapposJson0 = ZapposJson.getInstance("*aim\"!ww'{-g3*\"*O[7");
    // Undeclared exception!
    try {
        JsonUtils.escape(zapposJson0, (CharSequence) "*aim\"!ww'{-g3*\"*O[7", (Writer) null);
        fail("Expecting exception: NullPointerException");
    } catch (NullPointerException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
    }
}


@Test(timeout = 4000)
public void test05() throws Throwable {
    String string0 = "\\u";
    ZapposJson zapposJson0 = ZapposJson.getInstance();
    // Undeclared exception!
    try {
        JsonUtils.unescape(zapposJson0, (CharSequence) string0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
    } catch (StringIndexOutOfBoundsException e) {
    }
}


@Test(timeout = 4000)
public void test04() throws Throwable {
    ZapposJson zapposJson0 = ZapposJson.getInstance();
    PipedWriter pipedWriter0 = new PipedWriter();
    try {
        JsonUtils.unescape(zapposJson0, (CharSequence) "*aim\"!ww'{-g3*\"*O[7", (Writer) pipedWriter0);
        fail("Expecting exception: IOException");
    } catch (IOException e) {
        // 
        // Pipe not connected
        // 
        verifyException("java.io.PipedWriter", e);
    }
}

}
