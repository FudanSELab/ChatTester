/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 09:51:32 GMT 2024
 */
package technology.tabula.extractors;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.Cell;
import technology.tabula.Page;
import technology.tabula.Rectangle;
import technology.tabula.Ruling;
import technology.tabula.extractors.SpreadsheetExtractionAlgorithm;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class SpreadsheetExtractionAlgorithm_ESTest extends SpreadsheetExtractionAlgorithm_ESTest_scaffolding {


@Test(timeout = 4000)
public void test0() throws Throwable {
    SpreadsheetExtractionAlgorithm spreadsheetExtractionAlgorithm0 = new SpreadsheetExtractionAlgorithm();
    LinkedList<Ruling> linkedList0 = new LinkedList<Ruling>();
    linkedList0.add((Ruling) null);
    // Undeclared exception!
    try {
        spreadsheetExtractionAlgorithm0.extract((Page) null, (List<Ruling>) linkedList0);
        fail("Expecting exception: NullPointerException");
    } catch (NullPointerException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
        verifyException("technology.tabula.extractors.SpreadsheetExtractionAlgorithm", e);
    }
}


@Test(timeout = 4000)
public void test1() throws Throwable {
    SpreadsheetExtractionAlgorithm spreadsheetExtractionAlgorithm0 = new SpreadsheetExtractionAlgorithm();
    String string0 = spreadsheetExtractionAlgorithm0.toString();
    assertEquals("lattice", string0);
}


@Test(timeout = 4000)
public void test2() throws Throwable {
    SpreadsheetExtractionAlgorithm spreadsheetExtractionAlgorithm0 = new SpreadsheetExtractionAlgorithm();
    // Undeclared exception!
    try {
        spreadsheetExtractionAlgorithm0.isTabular((Page) null);
        fail("Expecting exception: NullPointerException");
    } catch (NullPointerException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
        verifyException("technology.tabula.extractors.SpreadsheetExtractionAlgorithm", e);
    }
}


@Test(timeout = 4000)
public void test3() throws Throwable {
    LinkedList<Ruling> linkedList0 = new LinkedList<Ruling>();
    List<Cell> list0 = SpreadsheetExtractionAlgorithm.findCells(linkedList0, linkedList0);
    assertTrue(list0.isEmpty());
}


// @Test(timeout = 4000)
// public void test4() throws Throwable {
//     LinkedList<Cell> linkedList0 = new LinkedList<Cell>();
//     // Undeclared exception!
//     try {
//         SpreadsheetExtractionAlgorithm.findSpreadsheetsFromCells(linkedList0);
//         fail("Expecting exception: NoClassDefFoundError");
//     } catch (NoClassDefFoundError e) {
//         //
//         // org/apache/commons/cli/ParseException
//         //
//         verifyException("technology.tabula.extractors.SpreadsheetExtractionAlgorithm", e);
//     }
// }

}
