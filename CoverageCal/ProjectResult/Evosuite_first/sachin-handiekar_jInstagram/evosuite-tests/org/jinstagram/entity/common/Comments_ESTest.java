/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:36:05 GMT 2024
 */

package org.jinstagram.entity.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.common.Comments;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Comments_ESTest extends Comments_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Comments comments0 = new Comments();
      comments0.setCount(2);
      int int0 = comments0.getCount();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Comments comments0 = new Comments();
      comments0.setCount((-3750));
      int int0 = comments0.getCount();
      assertEquals((-3750), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Comments comments0 = new Comments();
      LinkedList<CommentData> linkedList0 = new LinkedList<CommentData>();
      CommentData commentData0 = new CommentData();
      linkedList0.addLast(commentData0);
      comments0.setComments(linkedList0);
      List<CommentData> list0 = comments0.getComments();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Comments comments0 = new Comments();
      LinkedList<CommentData> linkedList0 = new LinkedList<CommentData>();
      CommentData commentData0 = new CommentData();
      List<CommentData> list0 = linkedList0.subList(0, 0);
      linkedList0.addLast(commentData0);
      comments0.setComments(list0);
      // Undeclared exception!
      try { 
        comments0.toString();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Comments comments0 = new Comments();
      List<CommentData> list0 = comments0.getComments();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Comments comments0 = new Comments();
      String string0 = comments0.toString();
      assertEquals("Comments [comments=null, count=0]", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Comments comments0 = new Comments();
      LinkedList<CommentData> linkedList0 = new LinkedList<CommentData>();
      comments0.setComments(linkedList0);
      List<CommentData> list0 = comments0.getComments();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Comments comments0 = new Comments();
      int int0 = comments0.getCount();
      assertEquals(0, int0);
  }
}
