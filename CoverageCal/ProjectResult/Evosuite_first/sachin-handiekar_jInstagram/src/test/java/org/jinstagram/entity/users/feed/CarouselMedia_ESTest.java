/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:26:18 GMT 2024
 */
package org.jinstagram.entity.users.feed;


import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class CarouselMedia_ESTest extends CarouselMedia_ESTest_scaffolding {


@Test(timeout = 4000)
public void test01() throws Throwable {
    CarouselMedia carouselMedia0 = new CarouselMedia();
    carouselMedia0.setType("");
    String string0 = carouselMedia0.getType();
    assertEquals("", string0);
}


@Test(timeout = 4000)
public void test03() throws Throwable {
    CarouselMedia carouselMedia0 = new CarouselMedia();
    String string0 = carouselMedia0.toString();
    assertEquals("CarouselMedia [type=null, images=null, videos=null, usersInPhotoList=null]", string0);
}


@Test(timeout = 4000)
public void test02() throws Throwable {
    CarouselMedia carouselMedia0 = new CarouselMedia();
    Videos videos0 = new Videos();
    carouselMedia0.setVideos(videos0);
    Videos videos1 = carouselMedia0.getVideos();
    assertSame(videos1, videos0);
}


@Test(timeout = 4000)
public void test05() throws Throwable {
    CarouselMedia carouselMedia0 = new CarouselMedia();
    Images images0 = new Images();
    carouselMedia0.setImages(images0);
    Images images1 = carouselMedia0.getImages();
    assertSame(images1, images0);
}


@Test(timeout = 4000)
public void test00() throws Throwable {
    CarouselMedia carouselMedia0 = new CarouselMedia();
    LinkedList<UsersInPhoto> linkedList0 = new LinkedList<UsersInPhoto>();
    UsersInPhoto usersInPhoto0 = new UsersInPhoto();
    linkedList0.add(usersInPhoto0);
    carouselMedia0.setUsersInPhotoList(linkedList0);
    List<UsersInPhoto> list0 = carouselMedia0.getUsersInPhotoList();
    assertEquals(1, list0.size());
}

}
