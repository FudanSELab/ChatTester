/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:37:54 GMT 2024
 */
package com.zappos.json.format;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.JavaSqlDateFormatter;
import com.zappos.json.format.ValueFormatter;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class JavaSqlDateFormatter_ESTest extends JavaSqlDateFormatter_ESTest_scaffolding {


@Test(timeout = 4000)
public void test04() throws Throwable {
    JavaSqlDateFormatter javaSqlDateFormatter0 = new JavaSqlDateFormatter();
    Object object0 = new Object();
    // Undeclared exception!
    try {
        javaSqlDateFormatter0.cast(object0);
        fail("Expecting exception: ClassCastException");
    } catch (ClassCastException e) {
    }
}


@Test(timeout = 4000)
public void test05() throws Throwable {
    JavaSqlDateFormatter javaSqlDateFormatter0 = new JavaSqlDateFormatter();
    javaSqlDateFormatter0.setPattern("=u'-D{&HY0*f.HK&1");
    // Undeclared exception!
    try {
        javaSqlDateFormatter0.newFormatter();
        fail("Expecting exception: IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // 
        // Unterminated quote
        // 
        verifyException("java.text.SimpleDateFormat", e);
    }
}


@Test(timeout = 4000)
public void test00() throws Throwable {
    JavaSqlDateFormatter javaSqlDateFormatter0 = new JavaSqlDateFormatter();
    ZapposJson zapposJson0 = ZapposJson.getInstance("");
    Date date0 = new Date(0L);
    String string0 = javaSqlDateFormatter0.format(zapposJson0, date0);
    assertEquals("\"1970-01-01\"", string0);
}


@Test(timeout = 4000)
public void test03() throws Throwable {
    JavaSqlDateFormatter javaSqlDateFormatter0 = new JavaSqlDateFormatter();
    javaSqlDateFormatter0.setPattern("Si~e_9Evn");
    ZapposJson zapposJson0 = ZapposJson.getInstance("Si~e_9Evn");
    try {
        javaSqlDateFormatter0.parse(zapposJson0, "Si~e_9Evn");
        fail("Expecting exception: IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // 
        // Illegal pattern character 'i'
        // 
        verifyException("java.text.SimpleDateFormat", e);
    }
}

}
