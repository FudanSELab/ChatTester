// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/auth/model/Token_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:23:21 GMT 2024
 */
package org.jinstagram.auth.model;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.auth.model.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Token_ESTest extends Token_ESTest_scaffolding {

    @Test
    public void testGetRawResponseNotNull() {
        String tokenValue = "testToken";
        String secretValue = "testSecret";
        String rawResponseValue = "testRawResponse";
        
        Token token = new Token(tokenValue, secretValue, rawResponseValue);
        
        assertEquals("Raw response should match", rawResponseValue, token.getRawResponse());
    }

    @Test
    public void testGetToken() {
        // Given
        String expectedToken = "testToken";
        String secret = "testSecret";
        Token token = new Token(expectedToken, secret);

        // When
        String actualToken = token.getToken();

        // Then
        assertEquals(expectedToken, actualToken);
    }

    @Test
    public void testGetSecret() {
        String expectedSecret = "mySecret";
        Token token = new Token("myToken", expectedSecret);
        
        String actualSecret = token.getSecret();
        
        assertEquals(expectedSecret, actualSecret);
    }

}
