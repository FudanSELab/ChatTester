// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/relationships/RelationshipFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:10:49 GMT 2024
 */
package org.jinstagram.entity.relationships;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.relationships.RelationshipData;
import org.jinstagram.entity.relationships.RelationshipFeed;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.relationships.RelationshipData;
import org.jinstagram.entity.relationships.RelationshipFeed;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class RelationshipFeed_ESTest extends RelationshipFeed_ESTest_scaffolding {

    @Test
    public void testGetData() {
        // Given
        RelationshipFeed relationshipFeed = new RelationshipFeed();
        RelationshipData expectedData = new RelationshipData();
        
        // When
        relationshipFeed.setData(expectedData);
        RelationshipData actualData = relationshipFeed.getData();
        
        // Then
        assertNotNull(actualData);
        assertEquals(expectedData, actualData);
    }

    @Test
    public void testSetMeta() {
        // Given
        RelationshipFeed relationshipFeed = new RelationshipFeed();
        Meta meta = new Meta();
        
        // When
        relationshipFeed.setMeta(meta);
        
        // Then
        Meta updatedMeta = relationshipFeed.getMeta();
        assertEquals(meta, updatedMeta);
    }

    @Test
    public void testSetData() {
        // Given
        RelationshipFeed relationshipFeed = new RelationshipFeed();
        RelationshipData testData = new RelationshipData();
        
        // When
        relationshipFeed.setData(testData);
        
        // Then
        assertEquals(testData, relationshipFeed.getData());
    }

    @Test
    public void testGetMeta() {
        // Given
        RelationshipFeed relationshipFeed = new RelationshipFeed();
        Meta expectedMeta = new Meta();
        relationshipFeed.setMeta(expectedMeta);

        // When
        Meta actualMeta = relationshipFeed.getMeta();

        // Then
        assertNotNull(actualMeta);
        assertEquals(expectedMeta, actualMeta);
    }

}
