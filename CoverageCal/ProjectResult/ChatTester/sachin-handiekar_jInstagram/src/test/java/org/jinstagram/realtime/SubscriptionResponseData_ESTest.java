// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/realtime/SubscriptionResponseData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:02:29 GMT 2024
 */
package org.jinstagram.realtime;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.realtime.SubscriptionResponseData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class SubscriptionResponseData_ESTest extends SubscriptionResponseData_ESTest_scaffolding {

    @Test
    public void testGetCallbackUrl() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String expectedCallbackUrl = "https://example.com/callback";
        subscriptionResponseData.setCallbackUrl(expectedCallbackUrl);

        String actualCallbackUrl = subscriptionResponseData.getCallbackUrl();

        assertEquals(expectedCallbackUrl, actualCallbackUrl);
    }

    @Test
    public void testSetCallbackUrl() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String newCallbackUrl = "https://example.com/callback";
        
        subscriptionResponseData.setCallbackUrl(newCallbackUrl);
        
        assertEquals(newCallbackUrl, subscriptionResponseData.getCallbackUrl());
    }

    @Test
    public void testSetType() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String expectedType = "testType";
        
        subscriptionResponseData.setType(expectedType);
        
        assertEquals(expectedType, subscriptionResponseData.getType());
    }

    @Test
    public void testSetObject() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String expectedObject = "testObject";
        
        subscriptionResponseData.setObject(expectedObject);
        
        assertEquals(expectedObject, subscriptionResponseData.getObject());
    }

    @Test
    public void testSetAspect() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String aspect = "testAspect";
        subscriptionResponseData.setAspect(aspect);
        
        assertEquals(aspect, subscriptionResponseData.getAspect());
    }

    @Test
    public void testGetType() {
        // Given
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        subscriptionResponseData.setType("testType");

        // When
        String result = subscriptionResponseData.getType();

        // Then
        assertEquals("testType", result);
    }

    @Test
    public void testGetAspect() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String aspectValue = "testAspect";
        subscriptionResponseData.setAspect(aspectValue);

        String retrievedAspect = subscriptionResponseData.getAspect();

        assertEquals(aspectValue, retrievedAspect);
    }

    @Test
    public void testGetId() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String expectedId = "testId";
        subscriptionResponseData.setId(expectedId);

        String actualId = subscriptionResponseData.getId();

        assertEquals(expectedId, actualId);
    }

    @Test
    public void testGetObject() {
        // Given
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String expectedObject = "TestObject";
        
        // When
        subscriptionResponseData.setObject(expectedObject);
        String actualObject = subscriptionResponseData.getObject();
        
        // Then
        assertEquals(expectedObject, actualObject);
    }

    @Test
    public void testSetId() {
        // Given
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String id = "12345";

        // When
        subscriptionResponseData.setId(id);

        // Then
        assertEquals(id, subscriptionResponseData.getId());
    }

    @Test
    public void testSetObjectId() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        String testObjectId = "testObjectId";
        
        subscriptionResponseData.setObjectId(testObjectId);
        
        assertEquals(testObjectId, subscriptionResponseData.getObjectId());
    }

    @Test
    public void testGetObjectId() {
        SubscriptionResponseData subscriptionResponseData = new SubscriptionResponseData();
        subscriptionResponseData.setObjectId("12345");
        
        String expectedObjectId = "12345";
        String actualObjectId = subscriptionResponseData.getObjectId();
        
        assertEquals(expectedObjectId, actualObjectId);
    }

}
