// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/tags/TagMediaFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:16:28 GMT 2024
 */
package org.jinstagram.entity.tags;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.tags.TagMediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import java.util.*;
import java.lang.*;
import org.junit.Test;
import java.util.LinkedList;
import java.util.List;
import org.jinstagram.entity.tags.TagMediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.tags.TagMediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import java.util.*;
import java.lang.*;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.tags.TagMediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.tags.TagMediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class TagMediaFeed_ESTest extends TagMediaFeed_ESTest_scaffolding {

    @Test
    public void testGetPagination() {
        TagMediaFeed tagMediaFeed = new TagMediaFeed();
        Pagination pagination = new Pagination();
        tagMediaFeed.setPagination(pagination);

        Pagination retrievedPagination = tagMediaFeed.getPagination();

        assertNotNull(retrievedPagination);
    }

    @Test
    public void testGetMeta() {
        TagMediaFeed tagMediaFeed = new TagMediaFeed();
        Meta meta = new Meta();
        tagMediaFeed.setMeta(meta);

        Meta retrievedMeta = tagMediaFeed.getMeta();

        assertNotNull(retrievedMeta);
    }

@Test
public void testSetData() {
    TagMediaFeed tagMediaFeed = new TagMediaFeed();

    List<MediaFeedData> testData = new LinkedList<MediaFeedData>();

    MediaFeedData mediaFeedData1 = new MediaFeedData();
    MediaFeedData mediaFeedData2 = new MediaFeedData();
    testData.add(mediaFeedData1);
    testData.add(mediaFeedData2);
    tagMediaFeed.setData(testData);
    List<MediaFeedData> retrievedData = tagMediaFeed.getData();
    assertEquals("Data field should contain 2 MediaFeedData objects", 2, retrievedData.size());
    assertTrue("Data field should contain mediaFeedData1", retrievedData.contains(mediaFeedData1));
    assertTrue("Data field should contain mediaFeedData2", retrievedData.contains(mediaFeedData2));
}

    @Test
    public void testSetMeta() {
        // Given
        TagMediaFeed tagMediaFeed = new TagMediaFeed();
        Meta meta = new Meta();
        
        // When
        tagMediaFeed.setMeta(meta);
        
        // Then
        assertEquals(meta, tagMediaFeed.getMeta());
    }

@Test
public void testGetData() {
    TagMediaFeed tagMediaFeed = new TagMediaFeed();
    MediaFeedData media1 = new MediaFeedData();
    MediaFeedData media2 = new MediaFeedData();

    tagMediaFeed.setData(new LinkedList<MediaFeedData>());

    tagMediaFeed.getData().add(media1);
    tagMediaFeed.getData().add(media2);
    List<MediaFeedData> retrievedData = tagMediaFeed.getData();
    assertNotNull(retrievedData);
    assertEquals(2, retrievedData.size());
}

}
