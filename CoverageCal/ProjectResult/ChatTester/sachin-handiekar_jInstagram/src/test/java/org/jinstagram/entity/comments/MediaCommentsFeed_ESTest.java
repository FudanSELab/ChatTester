// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/comments/MediaCommentsFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:32:11 GMT 2024
 */
package org.jinstagram.entity.comments;

import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.comments.MediaCommentsFeed;
import org.jinstagram.entity.common.Meta;
import org.junit.runner.RunWith;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.comments.MediaCommentsFeed;
import org.jinstagram.entity.common.Meta;
import org.junit.runner.RunWith;

import java.util.*;
import java.lang.*;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.comments.MediaCommentsFeed;
import org.jinstagram.entity.common.Meta;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class MediaCommentsFeed_ESTest extends MediaCommentsFeed_ESTest_scaffolding {

    @Test
    public void testGetMeta() {
        // Given
        MediaCommentsFeed mediaCommentsFeed = new MediaCommentsFeed();
        Meta expectedMeta = new Meta();
        mediaCommentsFeed.setMeta(expectedMeta);

        // When
        Meta actualMeta = mediaCommentsFeed.getMeta();

        // Then
        assertNotNull(actualMeta);
        // Add more assertions as needed based on the Meta object properties
    }

@Test
public void testSetCommentDataList() {
    MediaCommentsFeed mediaCommentsFeed = new MediaCommentsFeed();

    List<CommentData> newCommentDataList = new LinkedList<CommentData>();

    CommentData comment1 = new CommentData();
    CommentData comment2 = new CommentData();
    newCommentDataList.add(comment1);
    newCommentDataList.add(comment2);
    mediaCommentsFeed.setCommentDataList(newCommentDataList);
    List<CommentData> updatedCommentDataList = mediaCommentsFeed.getCommentDataList();
    assertNotNull(updatedCommentDataList);
    assertEquals(newCommentDataList.size(), updatedCommentDataList.size());
}

    @Test
    public void testSetMeta() {
        // Given
        MediaCommentsFeed mediaCommentsFeed = new MediaCommentsFeed();
        Meta meta = new Meta();
        meta.setCode(200);
        meta.setErrorType("No Error");
        
        // When
        mediaCommentsFeed.setMeta(meta);
        
        // Then
        Meta updatedMeta = mediaCommentsFeed.getMeta();
        assertEquals(200, updatedMeta.getCode());
        assertEquals("No Error", updatedMeta.getErrorType());
    }

}
