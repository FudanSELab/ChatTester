// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/VideoData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:55:49 GMT 2024
 */
package org.jinstagram.entity.common;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.VideoData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class VideoData_ESTest extends VideoData_ESTest_scaffolding {

    @Test
    public void testSetHeight() {
        VideoData videoData = new VideoData();
        int newHeight = 720;
        
        videoData.setHeight(newHeight);
        
        assertEquals(newHeight, videoData.getHeight());
    }

    @Test
    public void testToString() {
        VideoData videoData = new VideoData();
        videoData.setWidth(1920);
        videoData.setHeight(1080);
        videoData.setUrl("https://example.com/video.mp4");

        String expected = "VideoData [videoWidth=1920, videoHeight=1080, videoUrl=https://example.com/video.mp4]";
        String actual = videoData.toString();

        assertEquals(expected, actual);
    }

    @Test
    public void testGetWidth() {
        VideoData videoData = new VideoData();
        videoData.setWidth(640); // Set a specific width for testing

        int expectedWidth = 640;
        int actualWidth = videoData.getWidth();

        assertEquals(expectedWidth, actualWidth);
    }

    @Test
    public void testGetUrl() {
        // Given
        VideoData videoData = new VideoData();
        String expectedUrl = "https://example.com/video.mp4";
        videoData.setUrl(expectedUrl);

        // When
        String actualUrl = videoData.getUrl();

        // Then
        assertEquals(expectedUrl, actualUrl);
    }

    @Test
    public void testSetWidth() {
        VideoData videoData = new VideoData();
        int expectedWidth = 640;
        
        videoData.setWidth(expectedWidth);
        
        int actualWidth = videoData.getWidth();
        
        assertEquals(expectedWidth, actualWidth);
    }

    @Test
    public void testSetUrl() {
        VideoData videoData = new VideoData();
        String url = "https://example.com/video.mp4";
        
        videoData.setUrl(url);
        
        assertEquals(url, videoData.getUrl());
    }

    @Test
    public void testGetHeight() {
        VideoData videoData = new VideoData();
        videoData.setHeight(720); // Set a specific height for testing

        int expectedHeight = 720;
        int actualHeight = videoData.getHeight();

        assertEquals(expectedHeight, actualHeight);
    }

}
