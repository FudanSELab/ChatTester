// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/User_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:53:01 GMT 2024
 */
package org.jinstagram.entity.common;

import org.junit.Assert;
import org.junit.Test;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.User;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.User;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class User_ESTest extends User_ESTest_scaffolding {

    @Test
    public void testGetBio() {
        // Given
        User user = new User();
        String expectedBio = "This is a test bio";
        user.setBio(expectedBio);

        // When
        String actualBio = user.getBio();

        // Then
        Assert.assertEquals(expectedBio, actualBio);
    }

    @Test
    public void testGetUserName() {
        // Given
        User user = new User();
        String expectedUserName = "testUsername";
        user.setUserName(expectedUserName);

        // When
        String actualUserName = user.getUserName();

        // Then
        Assert.assertEquals(expectedUserName, actualUserName);
    }

    @Test
    public void testSetUserName() {
        User user = new User();
        String newUserName = "john_doe";
        user.setUserName(newUserName);
        
        assertEquals(newUserName, user.getUserName());
    }

    @Test
    public void testSetId() {
        // Given
        User user = new User();
        String id = "12345";

        // When
        user.setId(id);

        // Then
        assertEquals(id, user.getId());
    }

    @Test
    public void testSetProfilePictureUrl() {
        User user = new User();
        String newProfilePictureUrl = "https://example.com/profile.jpg";
        
        user.setProfilePictureUrl(newProfilePictureUrl);
        
        assertEquals(newProfilePictureUrl, user.getProfilePictureUrl());
    }

    @Test
    public void testGetId() {
        // Given
        User user = new User();
        String expectedId = "12345";
        user.setId(expectedId);

        // When
        String actualId = user.getId();

        // Then
        assertEquals(expectedId, actualId);
    }

    @Test
    public void testGetProfilePictureUrl() {
        User user = new User();
        String expectedProfilePictureUrl = "https://example.com/profile.jpg";
        user.setProfilePictureUrl(expectedProfilePictureUrl);

        String actualProfilePictureUrl = user.getProfilePictureUrl();

        assertEquals(expectedProfilePictureUrl, actualProfilePictureUrl);
    }

    @Test
    public void testGetWebsiteUrl() {
        // Given
        User user = new User();
        String expectedWebsiteUrl = "https://www.example.com";
        user.setWebsiteUrl(expectedWebsiteUrl);

        // When
        String actualWebsiteUrl = user.getWebsiteUrl();

        // Then
        Assert.assertEquals(expectedWebsiteUrl, actualWebsiteUrl);
    }

    @Test
    public void testToString() {
        User user = new User();
        user.setBio("Test Bio");
        user.setFullName("Test Full Name");
        user.setId("12345");
        user.setProfilePictureUrl("http://example.com/profile.jpg");
        user.setUserName("testuser");
        user.setWebsiteUrl("http://example.com");

        String expected = "User [bio=Test Bio, fullName=Test Full Name, id=12345, profilePictureUrl=http://example.com/profile.jpg, userName=testuser, websiteUrl=http://example.com]";
        String actual = user.toString();

        assertEquals(expected, actual);
    }

    @Test
    public void testSetWebsiteUrl() {
        // Given
        User user = new User();
        String websiteUrl = "https://www.example.com";

        // When
        user.setWebsiteUrl(websiteUrl);

        // Then
        assertEquals(websiteUrl, user.getWebsiteUrl());
    }

    @Test
    public void testGetFullName() {
        User user = new User();
        user.setFullName("John Doe");

        String expectedFullName = "John Doe";
        String actualFullName = user.getFullName();

        assertEquals(expectedFullName, actualFullName);
    }

    @Test
    public void testSetFullName() {
        User user = new User();
        String fullName = "John Doe";
        user.setFullName(fullName);
        
        assertEquals(fullName, user.getFullName());
    }

    @Test
    public void testSetBio() {
        User user = new User();
        String bio = "New bio";
        user.setBio(bio);
        
        assertEquals(bio, user.getBio());
    }

}
