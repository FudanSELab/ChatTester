// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/feed/MediaFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:28:18 GMT 2024
 */
package org.jinstagram.entity.users.feed;

import org.junit.Test;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import java.util.*;
import java.lang.*;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import java.util.*;
import java.lang.*;
import org.junit.Test;
import java.util.LinkedList;
import java.util.List;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class MediaFeed_ESTest extends MediaFeed_ESTest_scaffolding {

    @Test
    public void testGetPagination() {
        MediaFeed mediaFeed = new MediaFeed();
        Pagination pagination = new Pagination();
        mediaFeed.setPagination(pagination);

        Pagination retrievedPagination = mediaFeed.getPagination();

        assertNotNull("Pagination object should not be null", retrievedPagination);
    }

    @Test
    public void testSetPagination() {
        MediaFeed mediaFeed = new MediaFeed();
        Pagination pagination = new Pagination();
        
        mediaFeed.setPagination(pagination);
        
        assertEquals(pagination, mediaFeed.getPagination());
    }

    @Test
    public void testGetMeta() {
        MediaFeed mediaFeed = new MediaFeed();
        Meta meta = new Meta();
        mediaFeed.setMeta(meta);

        Meta retrievedMeta = mediaFeed.getMeta();

        assertNotNull("Meta object should not be null", retrievedMeta);
        // Add more assertions as needed based on Meta object properties
    }

@Test
public void testSetData() {
    MediaFeed mediaFeed = new MediaFeed();
    List<MediaFeedData> testData = new LinkedList<MediaFeedData>();

    // Fixing the buggy line
    MediaFeedData data1 = new MediaFeedData();
    data1.setId("Test1");
    testData.add(data1);

    MediaFeedData data2 = new MediaFeedData();
    data2.setId("Test2");
    testData.add(data2);

    MediaFeedData data3 = new MediaFeedData();
    data3.setId("Test3");
    testData.add(data3);

    mediaFeed.setData(testData);
    List<MediaFeedData> retrievedData = mediaFeed.getData();
    assertEquals(testData, retrievedData);
}

    @Test
    public void testSetMeta() {
        MediaFeed mediaFeed = new MediaFeed();
        Meta meta = new Meta();
        
        // Set the Meta object using the setMeta method
        mediaFeed.setMeta(meta);
        
        // Verify that the Meta object was set correctly
        assertEquals(meta, mediaFeed.getMeta());
    }

@Test
public void testGetData() {
    MediaFeed mediaFeed = new MediaFeed();
    MediaFeedData media1 = new MediaFeedData();
    MediaFeedData media2 = new MediaFeedData();

    mediaFeed.setData(new LinkedList<MediaFeedData>());

    mediaFeed.getData().add(media1);
    mediaFeed.getData().add(media2);
    List<MediaFeedData> retrievedData = mediaFeed.getData();
    assertNotNull(retrievedData);
    assertEquals(2, retrievedData.size());
}

}
