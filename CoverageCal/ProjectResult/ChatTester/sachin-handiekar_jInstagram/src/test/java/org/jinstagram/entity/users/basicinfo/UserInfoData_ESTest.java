// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/basicinfo/UserInfoData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:24:13 GMT 2024
 */
package org.jinstagram.entity.users.basicinfo;

import org.junit.Test;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.users.basicinfo.Counts;
import org.jinstagram.entity.users.basicinfo.UserInfoData;
import org.junit.runner.RunWith;

import java.util.*;
import java.lang.*;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.users.basicinfo.Counts;
import org.jinstagram.entity.users.basicinfo.UserInfoData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.users.basicinfo.Counts;
import org.jinstagram.entity.users.basicinfo.UserInfoData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.users.basicinfo.Counts;
import org.jinstagram.entity.users.basicinfo.UserInfoData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.users.basicinfo.Counts;
import org.jinstagram.entity.users.basicinfo.UserInfoData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class UserInfoData_ESTest extends UserInfoData_ESTest_scaffolding {

    @Test
    public void testGetId() {
        UserInfoData userInfoData = new UserInfoData();
        String expectedId = "12345";
        userInfoData.setId(expectedId);

        String actualId = userInfoData.getId();

        assertEquals(expectedId, actualId);
    }

@Test
public void testGetLastName() {
    UserInfoData userInfoData = new UserInfoData();
    String expectedLastName = "Doe";

    userInfoData.setLast_name(expectedLastName);

    String actualLastName = userInfoData.getLastName();
    assertEquals(expectedLastName, actualLastName);
}

    @Test
    public void testSetUsername() {
        UserInfoData userInfoData = new UserInfoData();
        String username = "testUsername";
        
        userInfoData.setUsername(username);
        
        assertEquals(username, userInfoData.getUsername());
    }

    @Test
    public void testGetUsername() {
        UserInfoData userInfoData = new UserInfoData();
        userInfoData.setUsername("testUsername");
        
        String actualUsername = userInfoData.getUsername();
        String expectedUsername = "testUsername";
        
        assertEquals(expectedUsername, actualUsername);
    }

    @Test
    public void testSetProfilePicture() {
        UserInfoData userInfoData = new UserInfoData();
        String profilePicture = "https://example.com/profile.jpg";
        
        userInfoData.setProfilePicture(profilePicture);
        
        assertEquals(profilePicture, userInfoData.getProfilePicture());
    }

    @Test
    public void testSetFirstName() {
        UserInfoData userInfoData = new UserInfoData();
        String firstName = "John";
        
        userInfoData.setFirstName(firstName);
        
        assertEquals(firstName, userInfoData.getFirstName());
    }

    @Test
    public void testSetBusiness() {
        UserInfoData userInfoData = new UserInfoData();
        boolean initialIsBusiness = userInfoData.isBusiness();
        
        // Set isBusiness to true
        userInfoData.setBusiness(true);
        assertTrue(userInfoData.isBusiness());
        
        // Set isBusiness to false
        userInfoData.setBusiness(false);
        assertFalse(userInfoData.isBusiness());
        
        // Ensure that setting isBusiness does not affect other properties
        assertEquals(initialIsBusiness, userInfoData.isBusiness());
    }

    @Test
    public void testSetBio() {
        UserInfoData userInfoData = new UserInfoData();
        String bio = "New bio information";
        
        userInfoData.setBio(bio);
        
        assertEquals(bio, userInfoData.getBio());
    }

    @Test
    public void testSetCounts() {
        UserInfoData userInfoData = new UserInfoData();
        Counts counts = new Counts();
        counts.setFollows(100);
        counts.setFollowedBy(200);
        counts.setMedia(300);

        userInfoData.setCounts(counts);

        assertEquals(100, userInfoData.getCounts().getFollows());
        assertEquals(200, userInfoData.getCounts().getFollowedBy());
        assertEquals(300, userInfoData.getCounts().getMedia());
    }

    @Test
    public void testSetId() {
        UserInfoData userInfoData = new UserInfoData();
        String id = "1234567890";
        userInfoData.setId(id);
        
        assertEquals(id, userInfoData.getId());
    }

    @Test
    public void testIsBusiness() {
        UserInfoData userInfoData = new UserInfoData();
        
        // Test when isBusiness is true
        userInfoData.setBusiness(true);
        assertTrue(userInfoData.isBusiness());
        
        // Test when isBusiness is false
        userInfoData.setBusiness(false);
        assertFalse(userInfoData.isBusiness());
    }

    @Test
    public void testGetBio() {
        // Given
        UserInfoData userInfoData = new UserInfoData();
        String expectedBio = "This is a test bio";
        userInfoData.setBio(expectedBio);

        // When
        String actualBio = userInfoData.getBio();

        // Then
        assertEquals(expectedBio, actualBio);
    }

    @Test
    public void testGetProfilePicture() {
        UserInfoData userInfoData = new UserInfoData();
        String expectedProfilePicture = "https://example.com/profile.jpg";
        userInfoData.setProfilePicture(expectedProfilePicture);

        String actualProfilePicture = userInfoData.getProfilePicture();

        assertEquals(expectedProfilePicture, actualProfilePicture);
    }

    @Test
    public void testGetCounts() {
        UserInfoData userInfoData = new UserInfoData();
        Counts counts = new Counts();
        userInfoData.setCounts(counts);

        Counts retrievedCounts = userInfoData.getCounts();

        assertNotNull(retrievedCounts);
    }

    @Test
    public void testGetWebsite() {
        UserInfoData userInfoData = new UserInfoData();
        String website = "www.example.com";
        userInfoData.setWebsite(website);

        String retrievedWebsite = userInfoData.getWebsite();

        assertEquals(website, retrievedWebsite);
    }

    @Test
    public void testSetLast_name() {
        UserInfoData userInfoData = new UserInfoData();
        String last_name = "Doe";
        userInfoData.setLast_name(last_name);
        
        assertEquals(last_name, userInfoData.getLastName());
    }

    @Test
    public void testSetWebsite() {
        UserInfoData userInfoData = new UserInfoData();
        String website = "www.example.com";
        
        userInfoData.setWebsite(website);
        
        assertEquals(website, userInfoData.getWebsite());
    }

    @Test
    public void testGetFirstName() {
        UserInfoData userInfoData = new UserInfoData();
        userInfoData.setFirstName("John");
        assertEquals("John", userInfoData.getFirstName());
    }

    @Test
    public void testSetFullName() {
        UserInfoData userInfoData = new UserInfoData();
        String fullName = "John Doe";
        
        userInfoData.setFullName(fullName);
        
        assertEquals(fullName, userInfoData.getFullName());
    }

    @Test
    public void testGetFullName() {
        UserInfoData userInfoData = new UserInfoData();
        String expectedFullName = "John Doe";
        userInfoData.setFullName(expectedFullName);

        String actualFullName = userInfoData.getFullName();

        assertEquals(expectedFullName, actualFullName);
    }

}
