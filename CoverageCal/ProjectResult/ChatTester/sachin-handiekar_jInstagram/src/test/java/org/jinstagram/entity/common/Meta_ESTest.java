// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/Meta_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:48:49 GMT 2024
 */
package org.jinstagram.entity.common;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.junit.runner.RunWith;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Meta_ESTest extends Meta_ESTest_scaffolding {

    @Test
    public void testGetErrorType() {
        Meta meta = new Meta();
        meta.setErrorType("Test Error Type");
        
        String errorType = meta.getErrorType();
        
        assertEquals("Test Error Type", errorType);
    }

    @Test
    public void testToString() {
        Meta meta = new Meta();
        meta.setCode(200);
        meta.setErrorMessage("Not Found");
        meta.setErrorType("API Error");

        String expected = "Meta [code=200, errorMessage=Not Found, errorType=API Error]";
        String actual = meta.toString();

        assertEquals(expected, actual);
    }

    @Test
    public void testGetErrorMessage() {
        Meta meta = new Meta();
        meta.setErrorMessage("Test Error Message");
        
        String errorMessage = meta.getErrorMessage();
        
        assertEquals("Test Error Message", errorMessage);
    }

    @Test
    public void testSetErrorType() {
        Meta meta = new Meta();
        String errorType = "custom_error";
        meta.setErrorType(errorType);
        
        assertEquals(errorType, meta.getErrorType());
    }

    @Test
    public void testSetErrorMessage() {
        Meta meta = new Meta();
        String errorMessage = "Sample error message";
        meta.setErrorMessage(errorMessage);
        
        assertEquals(errorMessage, meta.getErrorMessage());
    }

    @Test
    public void testSetCode() {
        Meta meta = new Meta();
        int newCode = 200;
        meta.setCode(newCode);
        
        assertEquals(newCode, meta.getCode());
    }

    @Test
    public void testGetCode() {
        // Given
        Meta meta = new Meta();
        meta.setCode(200);

        // When
        int code = meta.getCode();

        // Then
        assertEquals(200, code);
    }

}
