// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/ImageData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:40:48 GMT 2024
 */
package org.jinstagram.entity.common;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.ImageData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class ImageData_ESTest extends ImageData_ESTest_scaffolding {

    @Test
    public void testGetImageUrl() {
        ImageData imageData = new ImageData();
        String expectedUrl = "https://example.com/image.jpg";
        imageData.setImageUrl(expectedUrl);

        String actualUrl = imageData.getImageUrl();

        assertEquals(expectedUrl, actualUrl);
    }

    @Test
    public void testSetImageUrl() {
        ImageData imageData = new ImageData();
        String imageUrl = "https://example.com/image.jpg";
        
        imageData.setImageUrl(imageUrl);
        
        assertEquals(imageUrl, imageData.getImageUrl());
    }

    @Test
    public void testSetImageHeight() {
        ImageData imageData = new ImageData();
        int expectedHeight = 100;
        
        imageData.setImageHeight(expectedHeight);
        
        int actualHeight = imageData.getImageHeight();
        
        assertEquals(expectedHeight, actualHeight);
    }

    @Test
    public void testGetImageHeight() {
        ImageData imageData = new ImageData();
        imageData.setImageHeight(100);
        
        int expectedHeight = 100;
        int actualHeight = imageData.getImageHeight();
        
        assertEquals(expectedHeight, actualHeight);
    }

    @Test
    public void testGetImageWidth() {
        ImageData imageData = new ImageData();
        imageData.setImageWidth(100);
        
        int expectedWidth = 100;
        int actualWidth = imageData.getImageWidth();
        
        assertEquals(expectedWidth, actualWidth);
    }

    @Test
    public void testSetImageWidth() {
        ImageData imageData = new ImageData();
        int expectedWidth = 100;
        
        imageData.setImageWidth(expectedWidth);
        
        int actualWidth = imageData.getImageWidth();
        
        assertEquals(expectedWidth, actualWidth);
    }

    @Test
    public void testToString() {
        ImageData imageData = new ImageData();
        imageData.setImageHeight(100);
        imageData.setImageUrl("https://example.com/image.jpg");
        imageData.setImageWidth(200);

        String expected = "ImageData [imageHeight=100, imageUrl=https://example.com/image.jpg, imageWidth=200]";
        String actual = imageData.toString();

        assertEquals(expected, actual);
    }

}
