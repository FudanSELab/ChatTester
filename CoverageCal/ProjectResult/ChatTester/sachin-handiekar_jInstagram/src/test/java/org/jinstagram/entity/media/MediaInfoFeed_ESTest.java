// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/media/MediaInfoFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:05:00 GMT 2024
 */
package org.jinstagram.entity.media;






import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.media.MediaInfoFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.media.MediaInfoFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import java.util.*;
import java.lang.*;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.media.MediaInfoFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class MediaInfoFeed_ESTest extends MediaInfoFeed_ESTest_scaffolding {

@Test
public void testToString() {
    MediaFeedData testData = new MediaFeedData();
    testData.setId("12345");
    testData.setType("image");
    Meta testMeta = new Meta();
    testMeta.setCode(200);
    testMeta.setErrorType("none");
    MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();
    mediaInfoFeed.setData(testData);
    mediaInfoFeed.setMeta(testMeta);
    String expected = "MediaInfoFeed [data=MediaFeedData{id='12345', type='image'}, meta=Meta{code=200, errorType='none'}]";
    String actual = mediaInfoFeed.toString();
   
}

    @Test
    public void testSetMeta() {
        // Given
        Meta meta = new Meta();
        MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();

        // When
        mediaInfoFeed.setMeta(meta);

        // Then
        assertEquals(meta, mediaInfoFeed.getMeta());
    }

    @Test
    public void testGetData() {
        // Given
        MediaFeedData expectedData = new MediaFeedData();
        MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();
        mediaInfoFeed.setData(expectedData);

        // When
        MediaFeedData actualData = mediaInfoFeed.getData();

        // Then
        assertNotNull(actualData);
        // Add more assertions or verifications as needed
    }

    @Test
    public void testGetMeta() {
        // Given
        Meta expectedMeta = new Meta();
        MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();
        mediaInfoFeed.setMeta(expectedMeta);

        // When
        Meta actualMeta = mediaInfoFeed.getMeta();

        // Then
        assertNotNull(actualMeta);
        assertEquals(expectedMeta, actualMeta);
    }

    @Test
    public void testSetData() {
        // Given
        MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();
        MediaFeedData testData = new MediaFeedData();
        
        // When
        mediaInfoFeed.setData(testData);
        
        // Then
        assertEquals(testData, mediaInfoFeed.getData());
    }

}
