// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/Likes_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:44:44 GMT 2024
 */
package org.jinstagram.entity.common;


import java.util.*;
import java.lang.*;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.User;
import org.junit.runner.RunWith;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.User;
import org.junit.runner.RunWith;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.User;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Likes_ESTest extends Likes_ESTest_scaffolding {

@Test
public void testGetLikesUserList() {
    Likes likes = new Likes();
    List<User> expectedLikesUserList = new LinkedList<User>();

    User user1 = new User();
    user1.setUserName("JohnDoe");

    User user2 = new User();
    user2.setUserName("JaneSmith");
    expectedLikesUserList.add(user1);
    expectedLikesUserList.add(user2);
    likes.setLikesUserList(expectedLikesUserList);
    List<User> actualLikesUserList = likes.getLikesUserList();
    assertNotNull(actualLikesUserList);
    assertEquals(expectedLikesUserList.size(), actualLikesUserList.size());
    for (int i = 0; i < expectedLikesUserList.size(); i++) {
        assertEquals(expectedLikesUserList.get(i).getUserName(), actualLikesUserList.get(i).getUserName());
    }
}

    @Test
    public void testGetCount() {
        Likes likes = new Likes();
        likes.setCount(5); // Set a specific count for testing

        int expectedCount = 5;
        int actualCount = likes.getCount();

        assertEquals(expectedCount, actualCount);
    }

@Test
public void testSetLikesUserList() {
    Likes likes = new Likes();
    List<User> testUserList = new LinkedList<User>();

    User user1 = new User();
    user1.setUserName("JohnDoe");

    User user2 = new User();
    user2.setUserName("JaneSmith");
    testUserList.add(user1);
    testUserList.add(user2);
    likes.setLikesUserList(testUserList);
    List<User> updatedUserList = likes.getLikesUserList();
    assertNotNull(updatedUserList);
    assertEquals(2, updatedUserList.size());
    assertEquals("JohnDoe", updatedUserList.get(0).getUserName());
    assertEquals("JaneSmith", updatedUserList.get(1).getUserName());
}

    @Test
    public void testSetCount() {
        Likes likes = new Likes();
        int newCount = 10;
        
        likes.setCount(newCount);
        
        assertEquals(newCount, likes.getCount());
    }

}
