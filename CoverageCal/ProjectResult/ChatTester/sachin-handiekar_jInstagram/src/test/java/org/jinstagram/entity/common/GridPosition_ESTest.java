// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/GridPosition_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:38:49 GMT 2024
 */
package org.jinstagram.entity.common;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.GridPosition;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class GridPosition_ESTest extends GridPosition_ESTest_scaffolding {

    @Test
    public void testGetY() {
        GridPosition gridPosition = new GridPosition();
        gridPosition.setY(5.0); // Set a specific y-coordinate for testing

        double expectedY = 5.0;
        double actualY = gridPosition.getY();

        assertEquals(expectedY, actualY, 0.001); // Allowing for a small delta in case of floating-point precision issues
    }

    @Test
    public void testSetY() {
        GridPosition gridPosition = new GridPosition();
        double newY = 10.0;
        gridPosition.setY(newY);
        
        assertEquals(newY, gridPosition.getY(), 0.001);
    }

    @Test
    public void testGetX() {
        GridPosition gridPosition = new GridPosition();
        gridPosition.setX(5.0); // Set a known value for x
        double expectedX = 5.0; // Expected value of x

        double actualX = gridPosition.getX(); // Call the getX() method

        assertEquals(expectedX, actualX, 0.001); // Assert that the returned x-coordinate matches the expected value
    }

    @Test
    public void testSetX() {
        GridPosition gridPosition = new GridPosition();
        double newX = 10.0;
        gridPosition.setX(newX);
        
        assertEquals(newX, gridPosition.getX(), 0.001);
    }

}
