/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:18:36 GMT 2024
 */

package org.jinstagram.auth.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.Proxy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.auth.model.OAuthConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class OAuthConfig_ESTest extends OAuthConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("NFAt&SK3XS32']%md\r", (String) null, (String) null, (String) null, (String) null);
      String string0 = oAuthConfig0.getScope();
      assertEquals("oob", oAuthConfig0.getCallback());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("org.jinstagram.auth.model.OAuthConfig", "org.jinstagram.auth.model.OAuthConfig", "org.jinstagram.auth.model.OAuthConfig", "org.jinstagram.auth.model.OAuthConfig");
      String string0 = oAuthConfig0.getScope();
      assertEquals("org.jinstagram.auth.model.OAuthConfig", oAuthConfig0.getCallback());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("", "", "", "");
      Proxy proxy0 = Proxy.NO_PROXY;
      oAuthConfig0.setRequestProxy(proxy0);
      oAuthConfig0.getRequestProxy();
      assertTrue(oAuthConfig0.hasScope());
      assertEquals("", oAuthConfig0.getCallback());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("J{Q=M", "J{Q=M", (String) null, "", "y*c+;*o7Lzs9S],ng!");
      String string0 = oAuthConfig0.getDisplay();
      assertEquals("y*c+;*o7Lzs9S],ng!", string0);
      assertEquals("J{Q=M", oAuthConfig0.getApiSecret());
      assertNotNull(string0);
      assertTrue(oAuthConfig0.hasScope());
      assertEquals("", oAuthConfig0.getScope());
      assertEquals("oob", oAuthConfig0.getCallback());
      assertEquals("J{Q=M", oAuthConfig0.getApiKey());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("PD ,\"?L", "", "org.jinstagram.auth.model.OAuthConfig", "PD ,\"?L", "");
      String string0 = oAuthConfig0.getDisplay();
      assertEquals("PD ,\"?L", oAuthConfig0.getScope());
      assertEquals("org.jinstagram.auth.model.OAuthConfig", oAuthConfig0.getCallback());
      assertEquals("", string0);
      assertEquals("PD ,\"?L", oAuthConfig0.getApiKey());
      assertEquals("", oAuthConfig0.getApiSecret());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("", "", "", "");
      String string0 = oAuthConfig0.getCallback();
      assertTrue(oAuthConfig0.hasScope());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("NFAt&SK3XS32']%md\r", (String) null, (String) null, (String) null, (String) null);
      String string0 = oAuthConfig0.getApiSecret();
      assertFalse(oAuthConfig0.hasScope());
      assertNull(string0);
      assertEquals("oob", oAuthConfig0.getCallback());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("", "");
      String string0 = oAuthConfig0.getApiSecret();
      assertFalse(oAuthConfig0.hasScope());
      assertEquals("oob", oAuthConfig0.getCallback());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig((String) null, ",tN,\"tg", ",tN,\"tg", ",tN,\"tg", (String) null);
      String string0 = oAuthConfig0.getApiKey();
      assertTrue(oAuthConfig0.hasScope());
      assertNull(string0);
      assertEquals(",tN,\"tg", oAuthConfig0.getCallback());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("", "", "", "");
      String string0 = oAuthConfig0.getApiKey();
      assertNotNull(string0);
      assertEquals("", oAuthConfig0.getCallback());
      assertTrue(oAuthConfig0.hasScope());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("J{Q=M", "J{Q=M", (String) null, "", "y*c+;*o7Lzs9S],ng!");
      boolean boolean0 = oAuthConfig0.hasScope();
      assertEquals("J{Q=M", oAuthConfig0.getApiSecret());
      assertEquals("oob", oAuthConfig0.getCallback());
      assertEquals("y*c+;*o7Lzs9S],ng!", oAuthConfig0.getDisplay());
      assertTrue(boolean0);
      assertEquals("", oAuthConfig0.getScope());
      assertEquals("J{Q=M", oAuthConfig0.getApiKey());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("NFAt&SK3XS32']%md\r", (String) null, (String) null, (String) null, (String) null);
      boolean boolean0 = oAuthConfig0.hasScope();
      assertEquals("oob", oAuthConfig0.getCallback());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("J{Q=M", "J{Q=M", (String) null, "", "y*c+;*o7Lzs9S],ng!");
      String string0 = oAuthConfig0.getApiKey();
      assertEquals("J{Q=M", string0);
      assertEquals("J{Q=M", oAuthConfig0.getApiSecret());
      assertNotNull(string0);
      assertEquals("", oAuthConfig0.getScope());
      assertTrue(oAuthConfig0.hasScope());
      assertEquals("oob", oAuthConfig0.getCallback());
      assertEquals("y*c+;*o7Lzs9S],ng!", oAuthConfig0.getDisplay());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("J{Q=M", "J{Q=M", (String) null, "", "y*c+;*o7Lzs9S],ng!");
      String string0 = oAuthConfig0.getScope();
      assertEquals("y*c+;*o7Lzs9S],ng!", oAuthConfig0.getDisplay());
      assertEquals("", string0);
      assertEquals("J{Q=M", oAuthConfig0.getApiKey());
      assertNotNull(string0);
      assertEquals("oob", oAuthConfig0.getCallback());
      assertEquals("J{Q=M", oAuthConfig0.getApiSecret());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("J{Q=M", "J{Q=M", (String) null, "", "y*c+;*o7Lzs9S],ng!");
      String string0 = oAuthConfig0.getCallback();
      assertEquals("y*c+;*o7Lzs9S],ng!", oAuthConfig0.getDisplay());
      assertEquals("J{Q=M", oAuthConfig0.getApiKey());
      assertEquals("", oAuthConfig0.getScope());
      assertTrue(oAuthConfig0.hasScope());
      assertNotNull(string0);
      assertEquals("J{Q=M", oAuthConfig0.getApiSecret());
      assertEquals("oob", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("J{Q=M", "J{Q=M", (String) null, "", "y*c+;*o7Lzs9S],ng!");
      String string0 = oAuthConfig0.getApiSecret();
      assertEquals("y*c+;*o7Lzs9S],ng!", oAuthConfig0.getDisplay());
      assertEquals("oob", oAuthConfig0.getCallback());
      assertEquals("J{Q=M", string0);
      assertTrue(oAuthConfig0.hasScope());
      assertEquals("J{Q=M", oAuthConfig0.getApiKey());
      assertNotNull(string0);
      assertEquals("", oAuthConfig0.getScope());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig((String) null, (String) null);
      oAuthConfig0.getRequestProxy();
      assertEquals("oob", oAuthConfig0.getCallback());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig((String) null, "Va^CIc*Bs;aE", "Va^CIc*Bs;aE", "Va^CIc*Bs;aE");
      String string0 = oAuthConfig0.getDisplay();
      assertNull(string0);
      assertTrue(oAuthConfig0.hasScope());
      assertEquals("Va^CIc*Bs;aE", oAuthConfig0.getCallback());
  }
}
