// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/format/NoOpValueFormatter_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:46:01 GMT 2024
 */
package com.zappos.json.format;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.NoOpValueFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;
import org.junit.Test;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.NoOpValueFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class NoOpValueFormatter_ESTest extends NoOpValueFormatter_ESTest_scaffolding {

    @Test
    public void testCast() {
        // Given
        NoOpValueFormatter noOpValueFormatter = new NoOpValueFormatter();
        Object inputObject = new Object();

        // When
        Object result = noOpValueFormatter.cast(inputObject);

        // Then
        assertEquals(inputObject, result);
    }

    @Test
    public void testNewInstanceThrowsUnsupportedOperationException() {
        NoOpValueFormatter noOpValueFormatter = new NoOpValueFormatter();

        try {
            noOpValueFormatter.newInstance();
            fail("Expected UnsupportedOperationException was not thrown");
        } catch (UnsupportedOperationException e) {
            assertEquals("NoOp", e.getMessage());
        }
    }

}
