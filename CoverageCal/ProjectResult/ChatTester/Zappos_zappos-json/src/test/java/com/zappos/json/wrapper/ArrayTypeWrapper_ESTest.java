// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/wrapper/ArrayTypeWrapper_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 14:16:56 GMT 2024
 */
package com.zappos.json.wrapper;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import com.zappos.json.wrapper.ArrayTypeWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.junit.Test;
import static org.junit.Assert.*;
import com.zappos.json.wrapper.ArrayTypeWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class ArrayTypeWrapper_ESTest extends ArrayTypeWrapper_ESTest_scaffolding {

    @Test
    public void testSetTarget() {
        // Given
        ArrayTypeWrapper<Integer> arrayTypeWrapper = new ArrayTypeWrapper<>();
        Integer targetValue = 5;

        // When
        arrayTypeWrapper.setTarget(targetValue);

        // Then
        assertEquals(targetValue, arrayTypeWrapper.getTarget());
    }

    @Test
    public void testSetComponentType() {
        ArrayTypeWrapper arrayTypeWrapper = new ArrayTypeWrapper();
        Class<?> expectedComponentType = String.class;

        arrayTypeWrapper.setComponentType(expectedComponentType);

        Class<?> actualComponentType = arrayTypeWrapper.getComponentType();

        assertEquals(expectedComponentType, actualComponentType);
    }

    @Test
    public void testGetComponentType() {
        // Given
        ArrayTypeWrapper<String> arrayTypeWrapper = new ArrayTypeWrapper<>();
        Class<String> expectedComponentType = String.class;

        // When
        arrayTypeWrapper.setComponentType(expectedComponentType);
        Class<?> actualComponentType = arrayTypeWrapper.getComponentType();

        // Then
        assertEquals(expectedComponentType, actualComponentType);
    }

    @Test
    public void testGetTarget() {
        // Given
        ArrayTypeWrapper<Integer> arrayTypeWrapper = new ArrayTypeWrapper<>();
        Integer expected = 5;
        arrayTypeWrapper.setTarget(expected);

        // When
        Integer actual = arrayTypeWrapper.getTarget();

        // Then
        assertEquals(expected, actual);
    }

}
