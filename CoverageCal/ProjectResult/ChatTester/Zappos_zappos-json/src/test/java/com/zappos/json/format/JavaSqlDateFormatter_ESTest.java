// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/format/JavaSqlDateFormatter_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:37:54 GMT 2024
 */
package com.zappos.json.format;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import java.sql.Date;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.JavaSqlDateFormatter;
import com.zappos.json.format.ValueFormatter;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.JavaSqlDateFormatter;
import com.zappos.json.format.ValueFormatter;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class JavaSqlDateFormatter_ESTest extends JavaSqlDateFormatter_ESTest_scaffolding {

    @Test
    public void testNewFormatter_defaultPattern() {
        JavaSqlDateFormatter formatter = new JavaSqlDateFormatter();
        SimpleDateFormat simpleDateFormat = formatter.newFormatter();
        
        assertNotNull(simpleDateFormat);
        assertEquals("yyyy-MM-dd", simpleDateFormat.toPattern());
    }

    @Test
    public void testCast() {
        JavaSqlDateFormatter formatter = new JavaSqlDateFormatter();
        
        // Test case 1: Valid object of type Date
        Date expectedDate = new Date(System.currentTimeMillis());
        Object validObject = expectedDate;
        Date resultDate = formatter.cast(validObject);
        assertEquals(expectedDate, resultDate);
        
        // Test case 2: Invalid object of type String
        Object invalidObject = "2022-01-01";
        try {
            formatter.cast(invalidObject);
            // If the cast is successful for an invalid object, the test should fail
            fail("Expected ClassCastException was not thrown");
        } catch (ClassCastException e) {
            // Expected behavior
        }
    }

}
