/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:11:53 GMT 2024
 */
package technology.tabula;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.RectangularTextContainer;
import technology.tabula.Table;
import technology.tabula.extractors.ExtractionAlgorithm;
import technology.tabula.extractors.SpreadsheetExtractionAlgorithm;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Table_ESTest extends Table_ESTest_scaffolding {
    @Test 
    public void testEmpty() { 
    Table table = Table.empty();
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getColCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getColCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    assertEquals(0, table.getRowCount());
    }
    
    
    @Test 
    public void testSetPageNumber() { 
    Table table = Table.empty();
    table.setPageNumber(1);
    assertEquals(1, table.getPageNumber());
    }
    
    
    @Test 
    public void testGetCell() { 
    Table table = Table.empty();
    RectangularTextContainer cell = table.getCell(0, 0);
    assertEquals(TextChunk.EMPTY, cell);
    }
    
}
