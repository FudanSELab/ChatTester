// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/locations/LocationInfo_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:01:27 GMT 2024
 */
package org.jinstagram.entity.locations;

import org.jinstagram.entity.common.Location;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.locations.LocationInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class LocationInfo_ESTest extends LocationInfo_ESTest_scaffolding {

    @Test
    public void testGetLocationData() {
        // Create a new Location object
        Location location = new Location();
        
        // Set the location data
        LocationInfo locationInfo = new LocationInfo();
        locationInfo.setLocationData(location);
        
        // Get the location data using the getLocationData() method
        Location retrievedLocation = locationInfo.getLocationData();
        
        // Assert that the retrieved location is the same as the original location
        assertEquals(location, retrievedLocation);
    }

    @Test
    public void testSetLocationData() {
        // Create a new instance of LocationInfo
        LocationInfo locationInfo = new LocationInfo();

        // Create a new instance of Location
        Location location = new Location();
        // Set the necessary properties of the Location object
        // 

        // Call the method under test
        locationInfo.setLocationData(location);

        // Verify that the locationData property has been set correctly
        assertEquals(location, locationInfo.getLocationData());
    }

}
