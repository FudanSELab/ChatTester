// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/comments/CommentData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:28:38 GMT 2024
 */
package org.jinstagram.entity.comments;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.common.FromTagData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.FromTagData;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.common.FromTagData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class CommentData_ESTest extends CommentData_ESTest_scaffolding {

    @Test
    public void testSetText() {
        // Create an instance of CommentData
        CommentData commentData = new CommentData();

        // Set the text using the setText method
        String expectedText = "This is a test comment";
        commentData.setText(expectedText);

        // Verify that the text has been set correctly
        String actualText = commentData.getText();
        assertEquals(expectedText, actualText);
    }

    @Test
    public void testSetCreatedTime() {
        CommentData commentData = new CommentData();
        String createdTime = "2021-01-01 12:00:00";
        
        commentData.setCreatedTime(createdTime);
        
        assertEquals(createdTime, commentData.getCreatedTime());
    }

    @Test
    public void testGetCreatedTime() {
        // Create a CommentData object
        CommentData commentData = new CommentData();

        // Set the createdTime value
        String expectedCreatedTime = "2021-01-01 12:00:00";
        commentData.setCreatedTime(expectedCreatedTime);

        // Call the getCreatedTime method and assert the returned value
        String actualCreatedTime = commentData.getCreatedTime();
        assertEquals(expectedCreatedTime, actualCreatedTime);
    }

    @Test
    public void testGetText() {
        // Create a CommentData object
        CommentData commentData = new CommentData();

        // Set the text value
        String expectedText = "This is a test comment";
        commentData.setText(expectedText);

        // Get the text value using the getText() method
        String actualText = commentData.getText();

        // Assert that the actual text value is equal to the expected text value
        assertEquals(expectedText, actualText);
    }

    @Test
    public void testGetCommentFrom() {
        // Create a CommentData object
        CommentData commentData = new CommentData();

        // Create a FromTagData object
        FromTagData expectedFromTagData = new FromTagData();

        // Set the expected FromTagData object as the commentFrom in CommentData
        commentData.setCommentFrom(expectedFromTagData);

        // Call the getCommentFrom method
        FromTagData actualFromTagData = commentData.getCommentFrom();

        // Assert that the actual FromTagData object is the same as the expected FromTagData object
        assertEquals(expectedFromTagData, actualFromTagData);
    }

    @Test
    public void testSetId() {
        CommentData commentData = new CommentData();
        String id = "12345";
        commentData.setId(id);
        assertEquals(id, commentData.getId());
    }

    @Test
    public void testGetId() {
        // Create an instance of CommentData
        CommentData commentData = new CommentData();

        // Set the id using the setter method
        commentData.setId("12345");

        // Get the id using the getId() method
        String id = commentData.getId();

        // Assert that the id is equal to the expected value
        assertEquals("12345", id);
    }

}
