// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/feed/UserFeedData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:34:30 GMT 2024
 */
package org.jinstagram.entity.users.feed;


import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.users.feed.UserFeedData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.users.feed.UserFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class UserFeedData_ESTest extends UserFeedData_ESTest_scaffolding {

@Test
public void testGetLastName() {
    // Create a new instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the last name of the user
    user.setLastName("Doe");

    // Call the getLastName() method and assert the result
    assertEquals("Doe", user.getLastName());
}

@Test
public void testSetLastName() {
    // Create a new instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the last name using the setLastName method
    String lastName = "Doe";
    user.setLastName(lastName);

    // Verify that the last name is set correctly
    assertEquals(lastName, user.getLastName());
}

@Test
public void testSetFirstName() {
    // Create an instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the first name using the setFirstName method
    String firstName = "John";
    user.setFirstName(firstName);

    // Verify that the first name is set correctly
    assertEquals(firstName, user.getFirstName());
}

@Test
public void testGetUserName() {
    // Create an instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the value of userName
    String expectedUserName = "john_doe";
    user.setUserName(expectedUserName);

    // Call the getUserName() method
    String actualUserName = user.getUserName();

    // Assert that the returned value is equal to the expected value
    assertEquals(expectedUserName, actualUserName);
}

@Test
public void testSetUserName() {
    // Create an instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the username
    String userName = "john_doe";
    user.setUserName(userName);

    // Verify that the username is set correctly
    assertEquals(userName, user.getUserName());
}

@Test
public void testSetProfilePictureUrl() {
    // Create an instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the profile picture URL
    String profilePictureUrl = "https://example.com/profile.jpg";
    user.setProfilePictureUrl(profilePictureUrl);

    // Verify that the profile picture URL is set correctly
    assertEquals(profilePictureUrl, user.getProfilePictureUrl());
}

@Test
public void testSetBio() {
    // Create an instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the bio using the setBio method
    String bio = "This is my bio";
    user.setBio(bio);

    // Verify that the bio has been set correctly
    assertEquals(bio, user.getBio());
}

    @Test
    public void testGetProfilePictureUrl() {
        UserFeedData user = new UserFeedData();
        String expectedUrl = "https://example.com/profile.jpg";
        user.setProfilePictureUrl(expectedUrl);

        String actualUrl = user.getProfilePictureUrl();

        assertEquals(expectedUrl, actualUrl);
    }

@Test
public void testToString() {
    // Create a UserFeedData object with sample data
    UserFeedData user = new UserFeedData();
    user.setId("123");
    user.setProfilePictureUrl("https://example.com/profile.jpg");
    user.setUserName("john_doe");
    user.setFullName("John Doe");
    user.setWebsite("https://example.com");
    user.setBio("Software Engineer");

    // Expected result
    String expected = "UserFeedData [id=123, profilePictureUrl=https://example.com/profile.jpg, userName=john_doe, fullName=John Doe, website=https://example.com, bio=Software Engineer]";

    // Call the toString() method
    String result = user.toString();

    // Assert that the result matches the expected value
    assertEquals(expected, result);
}

@Test
public void testGetId() {
    // Create an instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the id using the setter method
    user.setId("12345");

    // Get the id using the getter method
    String id = user.getId();

    // Assert that the returned id is equal to the expected id
    assertEquals("12345", id);
}

@Test
public void testGetBio() {
    // Create a new instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the bio using the setter method
    String expectedBio = "This is my bio";
    user.setBio(expectedBio);

    // Get the bio using the getter method
    String actualBio = user.getBio();

    // Assert that the retrieved bio is equal to the expected bio
    assertEquals(expectedBio, actualBio);
}

@Test
public void testGetFirstName() {
    // Create a new instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the value of firstName using the setter method
    user.setFirstName("John");

    // Get the value of firstName using the getter method
    String firstName = user.getFirstName();

    // Assert that the value of firstName is equal to the expected value
    assertEquals("John", firstName);
}

@Test
public void testSetWebsite() {
    // Create an instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the website
    String website = "www.example.com";
    user.setWebsite(website);

    // Verify that the website is set correctly
    assertEquals(website, user.getWebsite());
}

@Test
public void testGetWebsite() {
    // Create a new instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the website value
    String website = "www.example.com";
    user.setWebsite(website);

    // Get the website value using the getWebsite() method
    String result = user.getWebsite();

    // Assert that the returned value is equal to the set value
    assertEquals(website, result);
}

@Test
public void testGetFullName() {
    // Create a new instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the full name of the user
    user.setFullName("John Doe");

    // Get the full name using the getFullName() method
    String fullName = user.getFullName();

    // Assert that the returned full name is equal to the set full name
    assertEquals("John Doe", fullName);
}

@Test
public void testSetFullName() {
    // Create an instance of UserFeedData
    UserFeedData user = new UserFeedData();

    // Set the full name using the setFullName method
    String fullName = "John Doe";
    user.setFullName(fullName);

    // Verify that the full name is set correctly
    assertEquals(fullName, user.getFullName());
}

    @Test
    public void testSetId() {
        UserFeedData user = new UserFeedData();
        String id = "12345";
        user.setId(id);
        assertEquals(id, user.getId());
    }

}
