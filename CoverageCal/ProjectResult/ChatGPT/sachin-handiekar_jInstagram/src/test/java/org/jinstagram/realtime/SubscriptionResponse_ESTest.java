// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/realtime/SubscriptionResponse_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:01:24 GMT 2024
 */
package org.jinstagram.realtime;


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.realtime.SubscriptionResponse;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class SubscriptionResponse_ESTest extends SubscriptionResponse_ESTest_scaffolding {

@Test
public void testSetMeta() {
    // Create a new instance of SubscriptionResponse
    SubscriptionResponse response = new SubscriptionResponse();

    // Create a new instance of Meta
    Meta meta = new Meta();

    // Set the values for the Meta instance
    meta.setCode(200);
    meta.setErrorType("success");
    meta.setErrorMessage("OK");

    // Call the setMeta method on the SubscriptionResponse instance
    response.setMeta(meta);

    // Verify that the meta field in SubscriptionResponse is set correctly
    assertEquals(meta, response.getMeta());
}

@Test
public void testGetMeta() {
    // Create a SubscriptionResponse object
    SubscriptionResponse response = new SubscriptionResponse();
    
    // Create a Meta object
    Meta expectedMeta = new Meta();
    
    // Set the Meta object in the SubscriptionResponse object
    response.setMeta(expectedMeta);
    
    // Call the getMeta() method
    Meta actualMeta = response.getMeta();
    
    // Assert that the returned Meta object is the same as the expected Meta object
    assertEquals(expectedMeta, actualMeta);
}

}
