// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/tags/TagInfoFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:14:28 GMT 2024
 */
package org.jinstagram.entity.tags;


import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.tags.TagInfoData;
import org.jinstagram.entity.tags.TagInfoFeed;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Meta;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.tags.TagInfoData;
import org.jinstagram.entity.tags.TagInfoFeed;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.tags.TagInfoData;
import org.jinstagram.entity.tags.TagInfoFeed;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class TagInfoFeed_ESTest extends TagInfoFeed_ESTest_scaffolding {

@Test
public void testGetMeta() {
    // Create an instance of TagInfoFeed
    TagInfoFeed tagInfoFeed = new TagInfoFeed();

    // Create an instance of Meta
    Meta meta = new Meta();
    // Set the desired values for the Meta object
    // 

    // Set the Meta object in the TagInfoFeed instance
    tagInfoFeed.setMeta(meta);

    // Call the getMeta() method and store the result
    Meta result = tagInfoFeed.getMeta();

    // Assert that the result is not null
    assertNotNull(result);

    // Assert that the result is equal to the Meta object set earlier
    assertEquals(meta, result);
}

    @Test
    public void testSetTagInfo() {
        // Create a new instance of TagInfoFeed
        TagInfoFeed tagInfoFeed = new TagInfoFeed();

        // Create a new instance of TagInfoData
        TagInfoData tagInfoData = new TagInfoData();

        // Set the tagInfoData using the setTagInfo method
        tagInfoFeed.setTagInfo(tagInfoData);

        // Verify that the tagInfoData is set correctly
        assertEquals(tagInfoData, tagInfoFeed.getTagInfo());
    }

    @Test
    public void testGetTagInfo() {
        // Create a new instance of TagInfoFeed
        TagInfoFeed tagInfoFeed = new TagInfoFeed();

        // Create a new instance of TagInfoData
        TagInfoData expectedTagInfo = new TagInfoData();

        // Set the expected TagInfoData in the TagInfoFeed instance
        tagInfoFeed.setTagInfo(expectedTagInfo);

        // Call the getTagInfo() method
        TagInfoData actualTagInfo = tagInfoFeed.getTagInfo();

        // Assert that the actual TagInfoData is equal to the expected TagInfoData
        assertEquals(expectedTagInfo, actualTagInfo);
    }

@Test
public void testToString() {
    // Create test data
    Meta meta = new Meta();
    TagInfoData tagInfo = new TagInfoData();
    TagInfoFeed tagInfoFeed = new TagInfoFeed();
    tagInfoFeed.setMeta(meta);
    tagInfoFeed.setTagInfo(tagInfo);

    // Call the method under test
    String result = tagInfoFeed.toString();

    // Verify the result
    String expected = String.format("TagInfoFeed [meta=%s, tagInfo=%s]", meta, tagInfo);
    assertEquals(expected, result);
}

    @Test
    public void testSetMeta() {
        // Create a new instance of TagInfoFeed
        TagInfoFeed tagInfoFeed = new TagInfoFeed();

        // Create a new instance of Meta
        Meta meta = new Meta();

        // Set the Meta object using the setMeta method
        tagInfoFeed.setMeta(meta);

        // Get the Meta object using the getMeta method
        Meta actualMeta = tagInfoFeed.getMeta();

        // Assert that the Meta object is not null
        assertNotNull(actualMeta);

        // Assert that the Meta object is the same as the one set
        assertSame(meta, actualMeta);
    }

}
