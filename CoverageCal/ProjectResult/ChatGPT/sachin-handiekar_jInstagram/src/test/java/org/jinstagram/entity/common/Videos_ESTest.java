// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/Videos_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:57:54 GMT 2024
 */
package org.jinstagram.entity.common;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.VideoData;
import org.jinstagram.entity.common.Videos;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Videos_ESTest extends Videos_ESTest_scaffolding {

    @Test
    public void testSetStandardResolution() {
        // Create a new instance of Videos
        Videos videos = new Videos();

        // Create a new instance of VideoData
        VideoData videoData = new VideoData();

        // Set the standard resolution using the setStandardResolution method
        videos.setStandardResolution(videoData);

        // Verify that the standard resolution has been set correctly
        assertEquals(videoData, videos.getStandardResolution());
    }

    @Test
    public void testSetLowResolution() {
        // Create a new instance of Videos
        Videos videos = new Videos();

        // Create a new instance of VideoData
        VideoData lowResolution = new VideoData();

        // Set the low resolution video data
        videos.setLowResolution(lowResolution);

        // Verify that the low resolution video data is set correctly
        assertEquals(lowResolution, videos.getLowResolution());
    }

    @Test
    public void testGetLowResolution() {
        // Create a Videos object
        Videos videos = new Videos();

        // Create a VideoData object for low resolution
        VideoData lowResolution = new VideoData();

        // Set the low resolution VideoData object in the Videos object
        videos.setLowResolution(lowResolution);

        // Call the getLowResolution() method and assert that it returns the same VideoData object
        assertEquals(lowResolution, videos.getLowResolution());
    }

    @Test
    public void testGetStandardResolution() {
        // Create a Videos object
        Videos videos = new Videos();

        // Create a VideoData object for standard resolution
        VideoData standardResolution = new VideoData();

        // Set the standard resolution in the Videos object
        videos.setStandardResolution(standardResolution);

        // Call the getStandardResolution() method
        VideoData result = videos.getStandardResolution();

        // Assert that the returned VideoData object is the same as the one set
        assertEquals(standardResolution, result);
    }

}
