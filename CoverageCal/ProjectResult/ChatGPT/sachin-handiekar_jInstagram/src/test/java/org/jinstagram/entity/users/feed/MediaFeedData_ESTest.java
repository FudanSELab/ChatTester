// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/feed/MediaFeedData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:30:23 GMT 2024
 */
package org.jinstagram.entity.users.feed;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.User;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Images;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Location;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Videos;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Likes;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Caption;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Comments;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class MediaFeedData_ESTest extends MediaFeedData_ESTest_scaffolding {

    @Test
    public void testSetImages() {
        // Create a new instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a new instance of Images
        Images images = new Images();

        // Set the images using the setImages method
        mediaFeedData.setImages(images);

        // Verify that the images are set correctly
        assertEquals(images, mediaFeedData.getImages());
    }

    @Test
    public void testGetComments() {
        // Create a new instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a new instance of Comments
        Comments comments = new Comments();

        // Set the comments in MediaFeedData
        mediaFeedData.setComments(comments);

        // Call the getComments() method
        Comments result = mediaFeedData.getComments();

        // Assert that the returned comments is the same as the one set
        assertEquals(comments, result);
    }

    @Test
    public void testSetComments() {
        // Create a new instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a new instance of Comments
        Comments comments = new Comments();

        // Set the comments using the setComments method
        mediaFeedData.setComments(comments);

        // Verify that the comments are set correctly
        assertEquals(comments, mediaFeedData.getComments());
    }

    @Test
    public void testSetLink() {
        MediaFeedData mediaFeedData = new MediaFeedData();
        String link = "https://example.com";
        mediaFeedData.setLink(link);
        assertEquals(link, mediaFeedData.getLink());
    }

    @Test
    public void testGetUser() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a User object
        User user = new User();
        // Set the user object in the MediaFeedData object
        mediaFeedData.setUser(user);

        // Call the getUser() method and assert that it returns the same User object
        assertEquals(user, mediaFeedData.getUser());
    }

    @Test
    public void testGetCaption() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a Caption object
        Caption caption = new Caption();
        caption.setText("Test caption");

        // Set the Caption object in the MediaFeedData object
        mediaFeedData.setCaption(caption);

        // Call the getCaption() method and assert the result
        assertEquals(caption, mediaFeedData.getCaption());
    }

    @Test
    public void testGetLikes() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a Likes object
        Likes likes = new Likes();
        // Set the likes object in the MediaFeedData object
        mediaFeedData.setLikes(likes);

        // Call the getLikes() method
        Likes result = mediaFeedData.getLikes();

        // Assert that the returned Likes object is the same as the one set
        assertEquals(likes, result);
    }

    @Test
    public void testGetLink() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Set the link value
        String link = "https://example.com";
        mediaFeedData.setLink(link);

        // Call the getLink() method and assert the result
        String result = mediaFeedData.getLink();
        assertEquals(link, result);
    }

    @Test
    public void testIsUserHasLiked() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Set the userHasLiked property to true
        mediaFeedData.setUserHasLiked(true);

        // Call the isUserHasLiked method and assert that it returns true
        assertTrue(mediaFeedData.isUserHasLiked());

        // Set the userHasLiked property to false
        mediaFeedData.setUserHasLiked(false);

        // Call the isUserHasLiked method and assert that it returns false
        assertFalse(mediaFeedData.isUserHasLiked());
    }

    @Test
    public void testGetCreatedTime() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Set the createdTime value
        String expectedCreatedTime = "2021-01-01T12:00:00";
        mediaFeedData.setCreatedTime(expectedCreatedTime);

        // Call the getCreatedTime method
        String actualCreatedTime = mediaFeedData.getCreatedTime();

        // Assert that the returned value is equal to the expected value
        assertEquals(expectedCreatedTime, actualCreatedTime);
    }

    @Test
    public void testSetCaption() {
        MediaFeedData mediaFeedData = new MediaFeedData();
        Caption caption = new Caption();
        
        mediaFeedData.setCaption(caption);
        
        assertEquals(caption, mediaFeedData.getCaption());
    }

    @Test
    public void testSetUser() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a User object
        User user = new User();

        // Set the User object using the setUser method
        mediaFeedData.setUser(user);

        // Verify that the User object is set correctly
        assertEquals(user, mediaFeedData.getUser());
    }

    @Test
    public void testSetCreatedTime() {
        MediaFeedData mediaFeedData = new MediaFeedData();
        String createdTime = "2021-01-01T12:00:00Z";
        
        mediaFeedData.setCreatedTime(createdTime);
        
        assertEquals(createdTime, mediaFeedData.getCreatedTime());
    }

    @Test
    public void testGetLocation() {
        // Create a new instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a new instance of Location
        Location location = new Location();
        // Set the desired values for the Location object
        // 

        // Set the Location object in the MediaFeedData instance
        mediaFeedData.setLocation(location);

        // Call the getLocation() method and assert the returned value
        Location returnedLocation = mediaFeedData.getLocation();
        assertEquals(location, returnedLocation);
    }

    @Test
    public void testSetLocation() {
        // Create a new instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a new instance of Location
        Location location = new Location();
        // Set the properties of Location
        // 

        // Call the method under test
        mediaFeedData.setLocation(location);

        // Verify that the location is set correctly
        assertEquals(location, mediaFeedData.getLocation());
    }

    @Test
    public void testGetVideos() {
        // Create a new instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a new instance of Videos
        Videos videos = new Videos();

        // Set the videos in the MediaFeedData instance
        mediaFeedData.setVideos(videos);

        // Call the getVideos() method
        Videos result = mediaFeedData.getVideos();

        // Assert that the returned videos is the same as the one set
        assertEquals(videos, result);
    }

    @Test
    public void testSetImageFilter() {
        // Create an instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Set the image filter
        String imageFilter = "filter";
        mediaFeedData.setImageFilter(imageFilter);

        // Verify that the image filter is set correctly
        assertEquals(imageFilter, mediaFeedData.getImageFilter());
    }

    @Test
    public void testSetVideos() {
        // Create a new instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create a new instance of Videos
        Videos videos = new Videos();

        // Set the videos using the setVideos method
        mediaFeedData.setVideos(videos);

        // Verify that the videos are set correctly
        assertEquals(videos, mediaFeedData.getVideos());
    }

    @Test
    public void testSetId() {
        MediaFeedData mediaFeedData = new MediaFeedData();
        String id = "12345";
        mediaFeedData.setId(id);
        assertEquals(id, mediaFeedData.getId());
    }

    @Test
    public void testGetImageFilter() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Set the image filter
        mediaFeedData.setImageFilter("filter");

        // Get the image filter using the getImageFilter() method
        String imageFilter = mediaFeedData.getImageFilter();

        // Assert that the image filter is equal to the expected value
        assertEquals("filter", imageFilter);
    }

    @Test
    public void testSetType() {
        MediaFeedData mediaFeedData = new MediaFeedData();
        String type = "photo";
        mediaFeedData.setType(type);
        assertEquals(type, mediaFeedData.getType());
    }

    @Test
    public void testSetLikes() {
        MediaFeedData mediaFeedData = new MediaFeedData();
        Likes likes = new Likes();
        
        mediaFeedData.setLikes(likes);
        
        assertEquals(likes, mediaFeedData.getLikes());
    }

    @Test
    public void testGetId() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Set the id using the setter method
        mediaFeedData.setId("12345");

        // Get the id using the getter method
        String id = mediaFeedData.getId();

        // Assert that the id is equal to the expected value
        assertEquals("12345", id);
    }

    @Test
    public void testSetUserHasLiked() {
        MediaFeedData mediaFeedData = new MediaFeedData();
        boolean userHasLiked = true;
        mediaFeedData.setUserHasLiked(userHasLiked);
        assertEquals(userHasLiked, mediaFeedData.isUserHasLiked());
    }

    @Test
    public void testGetType() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Set the type using the setter method
        mediaFeedData.setType("photo");

        // Get the type using the getType() method
        String type = mediaFeedData.getType();

        // Assert that the returned type is equal to the expected type
        assertEquals("photo", type);
    }

    @Test
    public void testGetImages() {
        // Create a MediaFeedData object
        MediaFeedData mediaFeedData = new MediaFeedData();

        // Create an Images object
        Images images = new Images();
        // Set the properties of the Images object
        // 

        // Set the Images object in the MediaFeedData object
        mediaFeedData.setImages(images);

        // Call the getImages() method
        Images result = mediaFeedData.getImages();

        // Assert that the returned Images object is the same as the one set
        assertEquals(images, result);
    }

}
