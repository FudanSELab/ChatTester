// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/VideoData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:55:49 GMT 2024
 */
package org.jinstagram.entity.common;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.VideoData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.VideoData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class VideoData_ESTest extends VideoData_ESTest_scaffolding {

    @Test
    public void testSetHeight() {
        // Create an instance of VideoData
        VideoData videoData = new VideoData();

        // Set the height using the setHeight method
        int height = 720;
        videoData.setHeight(height);

        // Verify that the height is set correctly
        assertEquals(height, videoData.getHeight());
    }

@Test
public void testToString() {
    // Create a VideoData object with test values
    VideoData videoData = new VideoData();
    videoData.setUrl("https://example.com/video");
    videoData.setWidth(1920);
    videoData.setHeight(1080);

    // Call the toString() method
    String result = videoData.toString();

    // Verify the expected output
    String expected = "VideoData [videoWidth=1920, videoHeight=1080, videoUrl=https://example.com/video]";
    assertEquals(expected, result);
}

    @Test
    public void testGetWidth() {
        // Create a new instance of VideoData
        VideoData videoData = new VideoData();

        // Set the width of the video data
        videoData.setWidth(1920);

        // Get the width using the getWidth() method
        int width = videoData.getWidth();

        // Assert that the width is equal to the expected value
        assertEquals(1920, width);
    }

@Test
public void testGetUrl() {
    // Create an instance of VideoData
    VideoData videoData = new VideoData();
    
    // Set the URL
    String url = "https://example.com/video.mp4";
    videoData.setUrl(url);
    
    // Get the URL using the getUrl() method
    String retrievedUrl = videoData.getUrl();
    
    // Assert that the retrieved URL is equal to the set URL
    assertEquals(url, retrievedUrl);
}

@Test
public void testSetWidth() {
    // Create an instance of VideoData
    VideoData videoData = new VideoData();

    // Set the width using the setWidth method
    int width = 1920;
    videoData.setWidth(width);

    // Verify that the width has been set correctly
    assertEquals(width, videoData.getWidth());
}

    @Test
    public void testSetUrl() {
        // Create an instance of VideoData
        VideoData videoData = new VideoData();

        // Set the URL using the setUrl() method
        String url = "https://example.com/video.mp4";
        videoData.setUrl(url);

        // Verify that the URL is set correctly
        assertEquals(url, videoData.getUrl());
    }

    @Test
    public void testGetHeight() {
        // Create a new instance of VideoData
        VideoData videoData = new VideoData();

        // Set the height of the video data
        videoData.setHeight(720);

        // Get the height using the getHeight() method
        int height = videoData.getHeight();

        // Assert that the returned height is equal to the set height
        assertEquals(720, height);
    }

}
