// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/format/NoOpValueFormatter_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:46:01 GMT 2024
 */
package com.zappos.json.format;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.NoOpValueFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class NoOpValueFormatter_ESTest extends NoOpValueFormatter_ESTest_scaffolding {

@Test
public void testCast() {
    // Create an instance of NoOpValueFormatter
    NoOpValueFormatter formatter = new NoOpValueFormatter();

    // Test case 1: Test with null object
    Object obj1 = null;
    Object result1 = formatter.cast(obj1);
    assertNull(result1);

    // Test case 2: Test with non-null object
    Object obj2 = "Test";
    Object result2 = formatter.cast(obj2);
    assertEquals(obj2, result2);
}

@Test
public void testNewInstance() {
    NoOpValueFormatter formatter = new NoOpValueFormatter();
    try {
        ValueFormatter<Object> newInstance = formatter.newInstance();
        assertNotNull(newInstance);
        assertTrue(newInstance instanceof NoOpValueFormatter);
    } catch (UnsupportedOperationException e) {
        assertEquals("NoOp", e.getMessage());
    }
}

}
