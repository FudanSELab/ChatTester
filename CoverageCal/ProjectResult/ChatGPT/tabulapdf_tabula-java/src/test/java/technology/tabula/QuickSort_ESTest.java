/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:01:44 GMT 2024
 */
package technology.tabula;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import technology.tabula.QuickSort;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class QuickSort_ESTest extends QuickSort_ESTest_scaffolding {

@Test(timeout = 4000)
public void test0() throws Throwable {
    Vector<Integer> vector0 = new Vector<Integer>();
    Integer integer0 = new Integer(2009);
    vector0.add(integer0);
    Integer integer1 = new Integer((-3776));
    vector0.add(integer1);
    Integer integer2 = new Integer(0);
    vector0.add(integer2);
    vector0.add(integer2);
    QuickSort.sort((List<Integer>) vector0);
    assertEquals("[-3776, 0, 0, 2009]", vector0.toString());
}

@Test(timeout = 4000)
public void test1() throws Throwable {
    Vector<Integer> vector0 = new Vector<Integer>();
    Integer integer0 = new Integer(2009);
    vector0.add(integer0);
    Integer integer1 = new Integer((-3776));
    vector0.add(integer1);
    Integer integer2 = new Integer(0);
    vector0.add(integer2);
    vector0.clone();
    QuickSort.sort((List<Integer>) vector0);
    QuickSort.sort((List<Integer>) vector0);
    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    doReturn(1, 2009, 2009, 58, 0).when(comparator0).compare(anyInt(), anyInt());
    QuickSort.sort((List<Integer>) vector0, (Comparator<? super Integer>) comparator0);
}

}
