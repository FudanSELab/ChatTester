// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/format/BigDecimalFormatter_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:31:38 GMT 2024
 */
package com.zappos.json.format;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.BigDecimalFormatter;
import com.zappos.json.format.ValueFormatter;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class BigDecimalFormatter_ESTest extends BigDecimalFormatter_ESTest_scaffolding {
    @Test
    public void testCast() {
        BigDecimalFormatter formatter = new BigDecimalFormatter();
        
        // Test case 1: Valid BigDecimal object
        Object obj1 = new BigDecimal("10.5");
        BigDecimal result1 = formatter.cast(obj1);
        assertEquals(new BigDecimal("10.5"), result1);
        
        // Test case 2: Valid Integer object
        Object obj2 = 20;
        BigDecimal result2 = formatter.cast(obj2);
        assertEquals(new BigDecimal("20"), result2);
        
        // Test case 3: Valid String object
        Object obj3 = "30.75";
        BigDecimal result3 = formatter.cast(obj3);
        assertEquals(new BigDecimal("30.75"), result3);
        
        // Test case 4: Invalid object
        Object obj4 = new Object();
        try {
            BigDecimal result4 = formatter.cast(obj4);
            fail("Expected ClassCastException to be thrown");
        } catch (ClassCastException e) {
            // Exception expected
        }
    }
}
