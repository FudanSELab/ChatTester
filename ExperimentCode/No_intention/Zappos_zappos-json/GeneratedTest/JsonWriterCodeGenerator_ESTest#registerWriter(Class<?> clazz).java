// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/JsonWriterCodeGenerator_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 14:02:58 GMT 2024
 */
package com.zappos.json;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.JsonBeanIntrospector;
import com.zappos.json.JsonWriterCodeGenerator;
import com.zappos.json.JsonWriterInvoker;
import com.zappos.json.ZapposJson;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsonWriterCodeGenerator_ESTest extends JsonWriterCodeGenerator_ESTest_scaffolding {
    @Test
    public void testRegisterWriter() throws Exception {
        // Create an instance of JsonWriterCodeGenerator
        ZapposJson zapposJson = new ZapposJson();
        JsonBeanIntrospector beanIntrospector = new JsonBeanIntrospector();
        JsonWriterCodeGenerator generator = new JsonWriterCodeGenerator(zapposJson, beanIntrospector);

        // Create a test class
        class TestClass {
            private String name;
            private int age;
            private boolean active;

            public TestClass(String name, int age, boolean active) {
                this.name = name;
                this.age = age;
                this.active = active;
            }

            public String getName() {
                return name;
            }

            public int getAge() {
                return age;
            }

            public boolean isActive() {
                return active;
            }
        }

        // Register the writer for the test class
        Class<?> testClass = TestClass.class;
        JsonWriterInvoker writerInvoker = generator.registerWriter(testClass);

        // Verify that the writerInvoker is not null
        assertNotNull(writerInvoker);

        // Verify that the writerInvoker is registered for the test class
        assertEquals(testClass, writerInvoker.getClazz());
        assertNotNull(writerInvoker.getJsonWriter());
    }
}
