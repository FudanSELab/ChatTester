// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/util/Reflections_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 14:11:21 GMT 2024
 */
package com.zappos.json.util;
import org.junit.Test;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.util.Reflections;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Reflections_ESTest extends Reflections_ESTest_scaffolding {
    @Test
    public void testGetAnnotation() throws NoSuchFieldException {
        // Create a sample class for testing
        class SampleClass {
            @SuppressWarnings("unused")
            private String privateField;
        }

        // Get the field from the sample class
        Field field = SampleClass.class.getDeclaredField("privateField");

        // Create a sample annotation for testing
        @interface SampleAnnotation {
            String value();
        }

        // Create a sample method for testing
        @SampleAnnotation("test")
        public void sampleMethod() {
        }

        // Get the method from the sample class
        Method method = SampleClass.class.getDeclaredMethod("sampleMethod");

        // Test case 1: Field annotation
        SampleAnnotation fieldAnnotation = Reflections.getAnnotation(method, field, SampleAnnotation.class);
        assertNotNull(fieldAnnotation);
        assertEquals("test", fieldAnnotation.value());

        // Test case 2: Method annotation
        SampleAnnotation methodAnnotation = Reflections.getAnnotation(method, null, SampleAnnotation.class);
        assertNotNull(methodAnnotation);
        assertEquals("test", methodAnnotation.value());

        // Test case 3: No annotation
        SampleAnnotation noAnnotation = Reflections.getAnnotation(null, null, SampleAnnotation.class);
        assertNull(noAnnotation);
    }
}
