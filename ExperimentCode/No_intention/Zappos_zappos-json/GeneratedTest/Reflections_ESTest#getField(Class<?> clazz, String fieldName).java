// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/util/Reflections_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 14:11:21 GMT 2024
 */
package com.zappos.json.util;
import org.junit.Test;
import java.lang.reflect.Field;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.util.Reflections;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Reflections_ESTest extends Reflections_ESTest_scaffolding {
    @Test
    public void testGetField() throws NoSuchFieldException {
        // Test case 1: Field exists in the class
        Class<?> clazz1 = MyClass.class;
        String fieldName1 = "myField";
        Field field1 = Reflections.getField(clazz1, fieldName1);
        assertNotNull(field1);
        assertEquals(fieldName1, field1.getName());

        // Test case 2: Field does not exist in the class
        Class<?> clazz2 = MyClass.class;
        String fieldName2 = "nonExistentField";
        try {
            Reflections.getField(clazz2, fieldName2);
            fail("NoSuchFieldException should have been thrown");
        } catch (NoSuchFieldException e) {
            // Exception expected
        }

        // Test case 3: Field exists in the superclass
        Class<?> clazz3 = MySubclass.class;
        String fieldName3 = "myField";
        Field field3 = Reflections.getField(clazz3, fieldName3);
        assertNotNull(field3);
        assertEquals(fieldName3, field3.getName());
    }
}
