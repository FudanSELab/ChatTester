// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/locations/LocationSearchFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:03:11 GMT 2024
 */
package org.jinstagram.entity.locations;
import java.util.List;
import org.jinstagram.entity.common.Location;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.locations.LocationSearchFeed;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class LocationSearchFeed_ESTest extends LocationSearchFeed_ESTest_scaffolding {
    @Test
    public void testGetLocationList() {
        // Create a test instance of LocationSearchFeed
        LocationSearchFeed locationSearchFeed = new LocationSearchFeed();

        // Create a test list of locations
        List<Location> expectedList = List.of(
                new Location("Location 1"),
                new Location("Location 2"),
                new Location("Location 3")
        );

        // Set the test list of locations in the locationSearchFeed instance
        locationSearchFeed.setLocationList(expectedList);

        // Call the getLocationList() method
        List<Location> actualList = locationSearchFeed.getLocationList();

        // Assert that the returned list is equal to the expected list
        assertEquals(expectedList, actualList);
    }
}
