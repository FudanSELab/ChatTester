// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/http/URLUtils_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:48:19 GMT 2024
 */
package org.jinstagram.http;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.http.URLUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class URLUtils_ESTest extends URLUtils_ESTest_scaffolding {
    @Test
    public void testDecodeURIComponent() {
        // Test case 1: Decoding a URL-encoded string
        String encodedString = "Hello%20World%21";
        String expectedDecodedString = "Hello World!";
        String decodedString = URLUtils.decodeURIComponent(encodedString);
        assertEquals(expectedDecodedString, decodedString);

        // Test case 2: Decoding a non URL-encoded string
        String nonEncodedString = "Hello World!";
        String expectedNonDecodedString = "Hello World!";
        String nonDecodedString = URLUtils.decodeURIComponent(nonEncodedString);
        assertEquals(expectedNonDecodedString, nonDecodedString);

        // Test case 3: Decoding a string with special characters
        String specialCharsString = "%24%25%26%2B%2C%2F%3A%3B%3D%3F%40";
        String expectedSpecialCharsDecodedString = "$%&+,/:;=?@";
        String specialCharsDecodedString = URLUtils.decodeURIComponent(specialCharsString);
        assertEquals(expectedSpecialCharsDecodedString, specialCharsDecodedString);
    }
}
