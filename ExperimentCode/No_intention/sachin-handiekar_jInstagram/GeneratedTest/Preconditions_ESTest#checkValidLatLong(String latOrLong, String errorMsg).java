// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/utils/Preconditions_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:17:41 GMT 2024
 */
package org.jinstagram.utils;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.utils.Preconditions;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Preconditions_ESTest extends Preconditions_ESTest_scaffolding {
    @Test
    public void testCheckValidLatLong() {
        // Test case 1: Valid latitude
        String lat = "37.7749";
        String errorMsg = "Invalid latitude";
        Preconditions.checkValidLatLong(lat, errorMsg);
        // No exception should be thrown

        // Test case 2: Valid longitude
        String lon = "-122.4194";
        Preconditions.checkValidLatLong(lon, errorMsg);
        // No exception should be thrown

        // Test case 3: Invalid latitude
        String invalidLat = "abc";
        try {
            Preconditions.checkValidLatLong(invalidLat, errorMsg);
            fail("Expected IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException e) {
            assertEquals(errorMsg, e.getMessage());
        }

        // Test case 4: Invalid longitude
        String invalidLon = "xyz";
        try {
            Preconditions.checkValidLatLong(invalidLon, errorMsg);
            fail("Expected IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException e) {
            assertEquals(errorMsg, e.getMessage());
        }
    }
}
