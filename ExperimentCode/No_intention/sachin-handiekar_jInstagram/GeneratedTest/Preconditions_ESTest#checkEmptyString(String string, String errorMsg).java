// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/utils/Preconditions_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:17:41 GMT 2024
 */
package org.jinstagram.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.utils.Preconditions;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Preconditions_ESTest extends Preconditions_ESTest_scaffolding {
@Test
public void testCheckEmptyString() {
    // Test case 1: Empty string
    String string1 = "";
    String errorMsg1 = "String is empty";
    try {
        Preconditions.checkEmptyString(string1, errorMsg1);
        fail("Expected an IllegalArgumentException to be thrown");
    } catch (IllegalArgumentException e) {
        assertEquals(errorMsg1, e.getMessage());
    }
    
    // Test case 2: Non-empty string
    String string2 = "Hello";
    String errorMsg2 = "String is empty";
    try {
        Preconditions.checkEmptyString(string2, errorMsg2);
    } catch (IllegalArgumentException e) {
        fail("Unexpected IllegalArgumentException");
    }
    
    // Test case 3: Null string
    String string3 = null;
    String errorMsg3 = "String is empty";
    try {
        Preconditions.checkEmptyString(string3, errorMsg3);
        fail("Expected a NullPointerException to be thrown");
    } catch (NullPointerException e) {
        assertEquals(errorMsg3, e.getMessage());
    }
}
}
