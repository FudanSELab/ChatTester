// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/http/URLUtils_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:48:19 GMT 2024
 */
package org.jinstagram.http;
import org.junit.Test;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.http.URLUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class URLUtils_ESTest extends URLUtils_ESTest_scaffolding {
    @Test
    public void testFormURLEncode() throws UnsupportedEncodingException {
        // Test case 1: Encoding a non-null string
        String input1 = "Hello World";
        String expected1 = "Hello%20World";
        String result1 = URLUtils.formURLEncode(input1);
        assertEquals(expected1, result1);

        // Test case 2: Encoding an empty string
        String input2 = "";
        String expected2 = "";
        String result2 = URLUtils.formURLEncode(input2);
        assertEquals(expected2, result2);

        // Test case 3: Encoding a string with special characters
        String input3 = "Hello@World!";
        String expected3 = "Hello%40World%21";
        String result3 = URLUtils.formURLEncode(input3);
        assertEquals(expected3, result3);

        // Test case 4: Encoding a string with spaces
        String input4 = "Hello World Again";
        String expected4 = "Hello%20World%20Again";
        String result4 = URLUtils.formURLEncode(input4);
        assertEquals(expected4, result4);

        // Test case 5: Encoding a string with non-ASCII characters
        String input5 = "你好，世界";
        String expected5 = "%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%96%E7%95%8C";
        String result5 = URLUtils.formURLEncode(input5);
        assertEquals(expected5, result5);
    }
}
