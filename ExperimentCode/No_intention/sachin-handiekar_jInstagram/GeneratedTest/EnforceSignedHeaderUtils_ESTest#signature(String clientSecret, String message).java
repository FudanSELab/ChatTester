// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/utils/EnforceSignedHeaderUtils_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:10:05 GMT 2024
 */
package org.jinstagram.utils;
import org.jinstagram.exceptions.InstagramException;
import org.junit.Test;
import java.nio.charset.Charset;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import org.apache.commons.codec.binary.Hex;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.utils.EnforceSignedHeaderUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class EnforceSignedHeaderUtils_ESTest extends EnforceSignedHeaderUtils_ESTest_scaffolding {
    @Test
    public void testSignature() throws InstagramException {
        String clientSecret = "myClientSecret";
        String message = "myMessage";
        
        try {
            SecretKeySpec keySpec = new SecretKeySpec(clientSecret.getBytes(Charset.forName("UTF-8")), "HmacSHA256");
            Mac mac = Mac.getInstance("HmacSHA256");
            mac.init(keySpec);
            byte[] result = mac.doFinal(message.getBytes(Charset.forName("UTF-8")));
            String expectedSignature = Hex.encodeHexString(result);
            
            String actualSignature = EnforceSignedHeaderUtils.signature(clientSecret, message);
            
            assertEquals(expectedSignature, actualSignature);
        } catch (NoSuchAlgorithmException | InvalidKeyException | NullPointerException e) {
            fail("Exception occurred: " + e.getMessage());
        }
    }
}
