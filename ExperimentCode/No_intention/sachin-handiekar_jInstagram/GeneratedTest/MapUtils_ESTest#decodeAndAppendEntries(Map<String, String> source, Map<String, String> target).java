// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/utils/MapUtils_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:13:58 GMT 2024
 */
package org.jinstagram.utils;
import org.jinstagram.http.URLUtils;
import java.util.HashMap;
import java.util.Map;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.utils.MapUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MapUtils_ESTest extends MapUtils_ESTest_scaffolding {
    @Test
    public void testDecodeAndAppendEntries() {
        // Create source map
        Map<String, String> source = new HashMap<>();
        source.put("key1", "value1");
        source.put("key2", "value2");

        // Create target map
        Map<String, String> target = new HashMap<>();
        target.put("existingKey", "existingValue");

        // Call the method to be tested
        MapUtils.decodeAndAppendEntries(source, target);

        // Verify the result
        assertEquals("value1", target.get(URLUtils.percentEncode("key1")));
        assertEquals("value2", target.get(URLUtils.percentEncode("key2")));
        assertEquals("existingValue", target.get("existingKey"));
    }
}
