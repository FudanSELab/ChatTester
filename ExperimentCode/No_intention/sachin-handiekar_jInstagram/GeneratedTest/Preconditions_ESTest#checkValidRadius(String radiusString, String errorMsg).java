// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/utils/Preconditions_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:17:41 GMT 2024
 */
package org.jinstagram.utils;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.utils.Preconditions;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Preconditions_ESTest extends Preconditions_ESTest_scaffolding {
    @Test
    public void testCheckValidRadius() {
        // Test case 1: radiusString is empty
        String radiusString1 = "";
        String errorMsg1 = "Invalid radius";
        try {
            Preconditions.checkValidRadius(radiusString1, errorMsg1);
            fail("Expected IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException e) {
            assertEquals(errorMsg1, e.getMessage());
        }

        // Test case 2: radiusString is not numeric
        String radiusString2 = "abc";
        String errorMsg2 = "Invalid radius";
        try {
            Preconditions.checkValidRadius(radiusString2, errorMsg2);
            fail("Expected IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException e) {
            assertEquals(errorMsg2, e.getMessage());
        }

        // Test case 3: radiusString is a valid numeric value
        String radiusString3 = "10";
        String errorMsg3 = "Invalid radius";
        try {
            Preconditions.checkValidRadius(radiusString3, errorMsg3);
        } catch (IllegalArgumentException e) {
            fail("Unexpected IllegalArgumentException thrown");
        }
    }
}
