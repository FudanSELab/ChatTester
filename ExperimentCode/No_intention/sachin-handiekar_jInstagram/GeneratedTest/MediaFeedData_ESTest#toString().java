// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/feed/MediaFeedData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:30:23 GMT 2024
 */
package org.jinstagram.entity.users.feed;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MediaFeedData_ESTest extends MediaFeedData_ESTest_scaffolding {
    @Test
    public void testToString() {
        // Create test data
        Caption caption = new Caption();
        Comments comments = new Comments();
        String createdTime = "2021-01-01";
        String id = "123456";
        String imageFilter = "filter";
        Images images = new Images();
        Likes likes = new Likes();
        String link = "https://example.com";
        Location location = new Location();
        List<String> tags = List.of("tag1", "tag2");
        String type = "photo";
        User user = new User();
        boolean userHasLiked = true;
        List<UsersInPhoto> usersInPhotoList = List.of(new UsersInPhoto());
        
        // Create instance of MediaFeedData
        MediaFeedData mediaFeedData = new MediaFeedData();
        mediaFeedData.setCaption(caption);
        mediaFeedData.setComments(comments);
        mediaFeedData.setCreatedTime(createdTime);
        mediaFeedData.setId(id);
        mediaFeedData.setImageFilter(imageFilter);
        mediaFeedData.setImages(images);
        mediaFeedData.setLikes(likes);
        mediaFeedData.setLink(link);
        mediaFeedData.setLocation(location);
        mediaFeedData.setTags(tags);
        mediaFeedData.setType(type);
        mediaFeedData.setUser(user);
        mediaFeedData.setUserHasLiked(userHasLiked);
        mediaFeedData.setUsersInPhotoList(usersInPhotoList);
        
        // Call the toString() method
        String result = mediaFeedData.toString();
        
        // Assert the expected result
        String expected = "MediaFeedData [caption=" + caption + ", comments=" + comments + ", createdTime=" + createdTime + ", id=" + id + ", imageFilter=" + imageFilter + ", images=" + images + ", likes=" + likes + ", link=" + link + ", location=" + location + ", tags=" + tags + ", type=" + type + ", user=" + user + ", userHasLiked=" + userHasLiked + ", usersInPhoto=" + usersInPhotoList + "]";
        assertEquals(expected, result);
    }
}
