// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/Line_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 09:53:47 GMT 2024
 */
package technology.tabula;
import java.util.List;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.Line;
import technology.tabula.TextChunk;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Line_ESTest extends Line_ESTest_scaffolding {
    @Test
    public void testGetTextElements() {
        // Create a Line object
        Line line = new Line();
        
        // Create a list of TextChunk objects
        List<TextChunk> expectedTextElements = new ArrayList<>();
        expectedTextElements.add(new TextChunk("Text 1"));
        expectedTextElements.add(new TextChunk("Text 2"));
        expectedTextElements.add(new TextChunk("Text 3"));
        
        // Set the textChunks of the Line object
        line.setTextElements(expectedTextElements);
        
        // Call the getTextElements method
        List<TextChunk> actualTextElements = line.getTextElements();
        
        // Assert that the returned list is equal to the expected list
        assertEquals(expectedTextElements, actualTextElements);
    }
}
