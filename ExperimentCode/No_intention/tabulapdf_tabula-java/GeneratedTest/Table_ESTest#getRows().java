// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/Table_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:11:53 GMT 2024
 */
package technology.tabula;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.RectangularTextContainer;
import technology.tabula.Table;
import technology.tabula.extractors.ExtractionAlgorithm;
import technology.tabula.extractors.SpreadsheetExtractionAlgorithm;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Table_ESTest extends Table_ESTest_scaffolding {
    @Test
    public void testGetRows() {
        // Create a Table object
        Table table = new Table(new ExtractionAlgorithm());

        // Add some RectangularTextContainer objects to the table
        RectangularTextContainer chunk1 = new RectangularTextContainer();
        RectangularTextContainer chunk2 = new RectangularTextContainer();
        RectangularTextContainer chunk3 = new RectangularTextContainer();
        table.add(chunk1, 0, 0);
        table.add(chunk2, 0, 1);
        table.add(chunk3, 1, 0);

        // Call the getRows() method
        List<List<RectangularTextContainer>> rows = table.getRows();

        // Assert that the returned rows list is not null
        assertNotNull(rows);

        // Assert that the number of rows is correct
        assertEquals(2, rows.size());

        // Assert that the number of columns in each row is correct
        assertEquals(2, rows.get(0).size());
        assertEquals(1, rows.get(1).size());

        // Assert that the RectangularTextContainer objects in the rows are correct
        assertEquals(chunk1, rows.get(0).get(0));
        assertEquals(chunk2, rows.get(0).get(1));
        assertEquals(chunk3, rows.get(1).get(0));
    }
}
