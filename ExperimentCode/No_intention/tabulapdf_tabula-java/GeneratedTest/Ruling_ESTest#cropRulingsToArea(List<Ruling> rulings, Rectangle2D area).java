// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/Ruling_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:09:27 GMT 2024
 */
package technology.tabula;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import java.util.List;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.geom.Point2D;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.Ruling;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Ruling_ESTest extends Ruling_ESTest_scaffolding {
    @Test
    public void testCropRulingsToArea() {
        // Create test data
        Rectangle2D area = new Rectangle2D.Float(0, 0, 10, 10);
        List<Ruling> rulings = new ArrayList<>();
        rulings.add(new Ruling(0, 0, 5, 5));
        rulings.add(new Ruling(5, 5, 10, 10));
        rulings.add(new Ruling(15, 15, 20, 20));

        // Call the method under test
        List<Ruling> result = Ruling.cropRulingsToArea(rulings, area);

        // Assert the expected result
        assertEquals(2, result.size());
        assertEquals(new Ruling(0, 0, 5, 5), result.get(0));
        assertEquals(new Ruling(5, 5, 10, 10), result.get(1));
    }
}
