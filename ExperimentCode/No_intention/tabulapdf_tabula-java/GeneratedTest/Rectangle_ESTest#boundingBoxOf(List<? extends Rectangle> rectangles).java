// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/Rectangle_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:03:59 GMT 2024
 */
package technology.tabula;
import org.junit.Test;
import java.util.ArrayList;
import java.util.List;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.Rectangle;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Rectangle_ESTest extends Rectangle_ESTest_scaffolding {
    @Test
    public void testBoundingBoxOf() {
        // Create a list of rectangles
        List<Rectangle> rectangles = new ArrayList<>();
        rectangles.add(new Rectangle(0, 0, 2, 2));
        rectangles.add(new Rectangle(1, 1, 3, 3));
        rectangles.add(new Rectangle(-1, -1, 4, 4));

        // Calculate the expected bounding box
        float expectedMinX = -1;
        float expectedMinY = -1;
        float expectedMaxX = 4;
        float expectedMaxY = 4;
        Rectangle expectedBoundingBox = new Rectangle(expectedMinY, expectedMinX, expectedMaxX - expectedMinX, expectedMaxY - expectedMinY);

        // Call the boundingBoxOf method
        Rectangle actualBoundingBox = Rectangle.boundingBoxOf(rectangles);

        // Assert that the actual bounding box matches the expected bounding box
        assertEquals(expectedBoundingBox.getTop(), actualBoundingBox.getTop(), 0.001);
        assertEquals(expectedBoundingBox.getLeft(), actualBoundingBox.getLeft(), 0.001);
        assertEquals(expectedBoundingBox.getWidth(), actualBoundingBox.getWidth(), 0.001);
        assertEquals(expectedBoundingBox.getHeight(), actualBoundingBox.getHeight(), 0.001);
    }
}
