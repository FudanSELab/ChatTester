// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/TextChunk_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:15:23 GMT 2024
 */
package technology.tabula;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.Line;
import technology.tabula.Rectangle;
import technology.tabula.TextChunk;
import technology.tabula.TextElement;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TextChunk_ESTest extends TextChunk_ESTest_scaffolding {
@Test
public void testHashCode() {
    // Create test objects
    TextElement textElement1 = new TextElement("Hello");
    TextElement textElement2 = new TextElement("World");
    List<TextElement> textElements = new ArrayList<>();
    textElements.add(textElement1);
    textElements.add(textElement2);
    TextChunk textChunk = new TextChunk(textElements);

    // Calculate expected hash code
    final int prime = 31;
    int expectedHashCode = super.hashCode();
    expectedHashCode = prime * expectedHashCode + ((textElements == null) ? 0 : textElements.hashCode());

    // Calculate actual hash code
    int actualHashCode = textChunk.hashCode();

    // Assert equality
    assertEquals(expectedHashCode, actualHashCode);
}
}
