// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/extractors/SpreadsheetExtractionAlgorithm_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 09:51:32 GMT 2024
 */
package technology.tabula.extractors;


import static org.mockito.Mockito.*;
import org.mockito.Mockito;
import java.util.*;
import java.lang.*;
import org.junit.Test;
import static org.junit.Assert.*;
import technology.tabula.Page;
import technology.tabula.extractors.SpreadsheetExtractionAlgorithm;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.Cell;
import technology.tabula.Page;
import technology.tabula.Rectangle;
import technology.tabula.Ruling;
import technology.tabula.extractors.SpreadsheetExtractionAlgorithm;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class SpreadsheetExtractionAlgorithm_ESTest extends SpreadsheetExtractionAlgorithm_ESTest_scaffolding {
    


    
    
    @Test
    public void testIsTabular_WhenPageTextIsEmpty_ReturnsFalse() {
        Page page = mock(Page.class);
        when(page.getText()).thenReturn("");

        SpreadsheetExtractionAlgorithm algorithm = new SpreadsheetExtractionAlgorithm();
        boolean result = algorithm.isTabular(page);

        assertFalse(result);
    }
}
