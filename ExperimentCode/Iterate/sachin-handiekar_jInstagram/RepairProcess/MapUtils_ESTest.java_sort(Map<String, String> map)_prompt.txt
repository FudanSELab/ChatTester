0-->1-->0-->compileRepair


# Test Method
    @Test
    public void testSort() {

           <Buggy Line>: diamond operator is not supported in -source 1.6
        Map<String, String> unsortedMap = new HashMap<>();

        unsortedMap.put("b", "apple");
        unsortedMap.put("a", "banana");
        unsortedMap.put("c", "cherry");
        Map<String, String> sortedMap = MapUtils.sort(unsortedMap);
        assertNotNull(sortedMap);
        assertEquals(3, sortedMap.size());
        assertEquals("banana", sortedMap.get("a"));
        assertEquals("apple", sortedMap.get("b"));
        assertEquals("cherry", sortedMap.get("c"));
    }


# Instruction
The test method has a bug error (marked <Buggy Line>). 
 Please repair the buggy code line and return the complete and compilable test method after repair. 
The generated code should be enclosed within ``` ```.

########

1-->2-->0-->compileRepair


# Test Method
@Test
public void testSort() {

       <Buggy Line>: wrong number of type arguments; required 2
    Map<String, String> unsortedMap = new HashMap<String>();

    unsortedMap.put("b", "apple");
    unsortedMap.put("a", "banana");
    unsortedMap.put("c", "cherry");
    Map<String, String> sortedMap = MapUtils.sort(unsortedMap);
    assertNotNull(sortedMap);
    assertEquals(3, sortedMap.size());
    assertEquals("banana", sortedMap.get("a"));
    assertEquals("apple", sortedMap.get("b"));
    assertEquals("cherry", sortedMap.get("c"));
}


# Instruction
The test method has a bug error (marked <Buggy Line>). 
 Please repair the buggy code line and return the complete and compilable test method after repair. 
The generated code should be enclosed within ``` ```.

########

