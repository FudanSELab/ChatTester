// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/utils/Preconditions_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:17:41 GMT 2024
 */
package org.jinstagram.utils;
import org.junit.Test;
import org.junit.Assert;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.utils.Preconditions;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Preconditions_ESTest extends Preconditions_ESTest_scaffolding {
    @Test
    public void testCheckEmptyString() {
        // Given
        String nonEmptyString = "Hello";
        String emptyString = "";
        String nullString = null;
        String errorMsg = "String cannot be empty or null";

        // When
        try {
            Preconditions.checkEmptyString(nonEmptyString, errorMsg);
        } catch (Exception e) {
            Assert.fail("Unexpected exception thrown for non-empty string: " + e.getMessage());
        }

        try {
            Preconditions.checkEmptyString(emptyString, errorMsg);
            Assert.fail("Expected exception not thrown for empty string");
        } catch (Exception e) {
            // Expected
        }

        try {
            Preconditions.checkEmptyString(nullString, errorMsg);
            Assert.fail("Expected exception not thrown for null string");
        } catch (Exception e) {
            // Expected
        }
    }
}
