// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/TextChunk_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:15:23 GMT 2024
 */
package technology.tabula;




import java.util.*;
import java.lang.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java.util.List;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.Line;
import technology.tabula.Rectangle;
import technology.tabula.TextChunk;
import technology.tabula.TextElement;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TextChunk_ESTest extends TextChunk_ESTest_scaffolding {
    




@Test
public void testMerge() {
    // Create TextElements for testing
    TextElement textElement1 = new TextElement(10, 20, 30, 40);
    TextElement textElement2 = new TextElement(50, 60, 70, 80);
    
    // Create TextChunks for testing
    TextChunk textChunk1 = new TextChunk(textElement1);
    TextChunk textChunk2 = new TextChunk(textElement2);
    
    // Merge textChunk2 into textChunk1
    TextChunk mergedTextChunk = textChunk1.merge(textChunk2);
    
    // Verify that textChunk1 now contains the merged text elements
    List<TextElement> mergedTextElements = mergedTextChunk.getTextElements();
    assertEquals(2, mergedTextElements.size());
    
    // Verify the content of the merged text elements
    assertEquals(textElement1, mergedTextElements.get(0));
    assertEquals(textElement2, mergedTextElements.get(1));
    
    // Verify the positioning information after merge
    assertEquals(10, mergedTextChunk.getTop(), 0.001);
    assertEquals(20, mergedTextChunk.getLeft(), 0.001);
    assertEquals(90, mergedTextChunk.getWidth(), 0.001); // Combined width
    assertEquals(120, mergedTextChunk.getHeight(), 0.001); // Combined height
}
}
