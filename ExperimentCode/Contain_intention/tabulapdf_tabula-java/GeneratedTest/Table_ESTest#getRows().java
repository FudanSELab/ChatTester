// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/Table_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:11:53 GMT 2024
 */
package technology.tabula;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import technology.tabula.RectangularTextContainer;
import technology.tabula.Table;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.RectangularTextContainer;
import technology.tabula.Table;
import technology.tabula.extractors.ExtractionAlgorithm;
import technology.tabula.extractors.SpreadsheetExtractionAlgorithm;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Table_ESTest extends Table_ESTest_scaffolding {
    @Test
    public void testGetRows() {
        // Create a Table object for testing
        Table table = new Table("extractionMethod");

        // Add some RectangularTextContainer to the table
        RectangularTextContainer container1 = new RectangularTextContainer(new Rectangle2D.Double(0, 0, 10, 10), "Text 1");
        RectangularTextContainer container2 = new RectangularTextContainer(new Rectangle2D.Double(0, 0, 10, 10), "Text 2");
        table.add(container1, 0, 0);
        table.add(container2, 1, 0);

        // Retrieve the rows using getRows() method
        List<List<RectangularTextContainer>> rows = table.getRows();

        // Assert that the rows are not null
        assertNotNull(rows);

        // Assert the expected number of rows
        assertEquals(2, rows.size());

        // Assert the expected number of columns in each row
        assertEquals(1, rows.get(0).size());
        assertEquals(1, rows.get(1).size());

        // Assert the content of the RectangularTextContainer in each row
        assertEquals("Text 1", rows.get(0).get(0).getText());
        assertEquals("Text 2", rows.get(1).get(0).getText());
    }
}
