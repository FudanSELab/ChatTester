// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/Table_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 10:11:53 GMT 2024
 */
package technology.tabula;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertSame;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.RectangularTextContainer;
import technology.tabula.Table;
import technology.tabula.extractors.ExtractionAlgorithm;
import technology.tabula.extractors.SpreadsheetExtractionAlgorithm;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Table_ESTest extends Table_ESTest_scaffolding {
    @Test
    public void testGetCell() {
        // Create a Table instance
        Table table = new Table("extractionMethod");

        // Add a RectangularTextContainer to the Table at position (1, 1)
        RectangularTextContainer textContainer = new RectangularTextContainer(new Rectangle2D.Double(0, 0, 10, 10), "Text");
        table.add(textContainer, 1, 1);

        // Test retrieving the added RectangularTextContainer
        RectangularTextContainer retrievedCell = table.getCell(1, 1);

        // Assert that the retrieved cell is not null
        assertNotNull(retrievedCell);

        // Assert that the retrieved cell is the same as the added RectangularTextContainer
        assertSame(textContainer, retrievedCell);

        // Test retrieving a non-existent cell
        RectangularTextContainer emptyCell = table.getCell(2, 2);

        // Assert that the retrieved empty cell is not null
        assertNotNull(emptyCell);

        // Assert that the retrieved empty cell is TextChunk.EMPTY
        assertEquals(TextChunk.EMPTY, emptyCell);
    }
}
