// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/format/JavaTimestampFormatter_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:44:18 GMT 2024
 */
package com.zappos.json.format;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import com.zappos.json.ZapposJson;
import java.sql.Timestamp;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.JavaTimestampFormatter;
import com.zappos.json.format.ValueFormatter;
import java.sql.Timestamp;
import java.text.ParseException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JavaTimestampFormatter_ESTest extends JavaTimestampFormatter_ESTest_scaffolding {
    @Test
    public void testFormat_withPattern() {
        JavaTimestampFormatter formatter = new JavaTimestampFormatter();
        ZapposJson zapposJson = new ZapposJson();
        Timestamp timestamp = new Timestamp(System.currentTimeMillis());
        String pattern = "yyyy-MM-dd HH:mm:ss";

        String formattedTimestamp = formatter.format(zapposJson, timestamp);

        assertEquals("Formatted timestamp should match pattern", new SimpleDateFormat(pattern).format(timestamp), formattedTimestamp);
    }
}
