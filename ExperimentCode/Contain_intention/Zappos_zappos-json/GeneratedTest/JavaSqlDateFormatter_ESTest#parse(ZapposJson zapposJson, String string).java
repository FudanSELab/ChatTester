// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/Zappos_zappos-json/src/test/java/com/zappos/json/format/JavaSqlDateFormatter_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:37:54 GMT 2024
 */
package com.zappos.json.format;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import com.zappos.json.ZapposJson;
import java.sql.Date;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.JavaSqlDateFormatter;
import com.zappos.json.format.ValueFormatter;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JavaSqlDateFormatter_ESTest extends JavaSqlDateFormatter_ESTest_scaffolding {
    @Test
    public void testParse() throws Exception {
        // Given
        JavaSqlDateFormatter formatter = new JavaSqlDateFormatter();
        ZapposJson zapposJson = new ZapposJson();
        String dateString = "2022-01-01";

        // When
        Date parsedDate = formatter.parse(zapposJson, dateString);

        // Then
        assertEquals(Date.valueOf("2022-01-01"), parsedDate);
    }
}
