// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/locations/LocationSearchFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:03:11 GMT 2024
 */
package org.jinstagram.entity.locations;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import java.util.LinkedList;
import java.util.List;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.locations.LocationSearchFeed;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.locations.LocationSearchFeed;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class LocationSearchFeed_ESTest extends LocationSearchFeed_ESTest_scaffolding {
    @Test
    public void testSetLocationList() {
        // Create a new LocationSearchFeed object
        LocationSearchFeed locationSearchFeed = new LocationSearchFeed();
        
        // Create a list of Location objects to set
        List<Location> testLocationList = new LinkedList<>();
        Location location1 = new Location("Location 1", 123.456, 789.012);
        Location location2 = new Location("Location 2", 456.789, 321.654);
        testLocationList.add(location1);
        testLocationList.add(location2);
        
        // Set the testLocationList using setLocationList method
        locationSearchFeed.setLocationList(testLocationList);
        
        // Retrieve the locationList from the LocationSearchFeed object
        List<Location> retrievedLocationList = locationSearchFeed.getLocationList();
        
        // Assert that the retrieved locationList is equal to the testLocationList
        assertEquals(testLocationList, retrievedLocationList);
    }
}
