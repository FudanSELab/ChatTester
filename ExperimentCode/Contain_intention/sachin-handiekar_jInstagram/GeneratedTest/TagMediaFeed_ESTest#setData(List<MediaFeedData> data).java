// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/tags/TagMediaFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:16:28 GMT 2024
 */
package org.jinstagram.entity.tags;
import org.junit.Test;
import java.util.LinkedList;
import java.util.List;
import org.jinstagram.entity.tags.TagMediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.tags.TagMediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TagMediaFeed_ESTest extends TagMediaFeed_ESTest_scaffolding {
    @Test
    public void testSetData() {
        // Create a new instance of TagMediaFeed
        TagMediaFeed tagMediaFeed = new TagMediaFeed();

        // Create a list of MediaFeedData objects for testing
        List<MediaFeedData> testData = new LinkedList<>();
        MediaFeedData mediaFeedData1 = new MediaFeedData();
        MediaFeedData mediaFeedData2 = new MediaFeedData();
        testData.add(mediaFeedData1);
        testData.add(mediaFeedData2);

        // Call the setData method to set the test data
        tagMediaFeed.setData(testData);

        // Validate that the data field in TagMediaFeed has been set correctly
        List<MediaFeedData> retrievedData = tagMediaFeed.getData();
        assertEquals("Data field should contain 2 MediaFeedData objects", 2, retrievedData.size());
        assertTrue("Data field should contain mediaFeedData1", retrievedData.contains(mediaFeedData1));
        assertTrue("Data field should contain mediaFeedData2", retrievedData.contains(mediaFeedData2));
    }
}
