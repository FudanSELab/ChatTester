// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/Comments_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:36:05 GMT 2024
 */
package org.jinstagram.entity.common;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.common.Comments;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Comments_ESTest extends Comments_ESTest_scaffolding {
    @Test
    public void testGetComments() {
        // Create a new instance of Comments
        Comments comments = new Comments();

        // Create a sample list of CommentData objects
        List<CommentData> sampleComments = new LinkedList<>();
        sampleComments.add(new CommentData("User1", "Comment1"));
        sampleComments.add(new CommentData("User2", "Comment2"));

        // Set the sample comments list to the Comments instance
        comments.setComments(sampleComments);

        // Retrieve the comments using getComments() method
        List<CommentData> retrievedComments = comments.getComments();

        // Check if the retrieved comments list is not null
        assertNotNull(retrievedComments);

        // Check if the retrieved comments list size matches the sample comments list size
        assertEquals(sampleComments.size(), retrievedComments.size());

        // Check if the retrieved comments list contains the same elements as the sample comments list
        for (int i = 0; i < sampleComments.size(); i++) {
            assertEquals(sampleComments.get(i), retrievedComments.get(i));
        }
    }
}
