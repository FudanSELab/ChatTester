// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/feed/MediaFeedData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:30:23 GMT 2024
 */
package org.jinstagram.entity.users.feed;
import static org.junit.Assert.*;
import org.junit.Test;
import java.util.List;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Caption;
import org.jinstagram.entity.common.Comments;
import org.jinstagram.entity.common.Images;
import org.jinstagram.entity.common.Likes;
import org.jinstagram.entity.common.Location;
import org.jinstagram.entity.common.User;
import org.jinstagram.entity.common.UsersInPhoto;
import org.jinstagram.entity.common.Videos;
import org.jinstagram.entity.users.feed.CarouselMedia;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MediaFeedData_ESTest extends MediaFeedData_ESTest_scaffolding {
    @Test
    public void testGetUsersInPhotoList() {
        // Given
        MediaFeedData mediaFeedData = new MediaFeedData();
        List<UsersInPhoto> expectedUsersInPhotoList = new LinkedList<>();
        UsersInPhoto user1 = new UsersInPhoto();
        UsersInPhoto user2 = new UsersInPhoto();
        expectedUsersInPhotoList.add(user1);
        expectedUsersInPhotoList.add(user2);
        mediaFeedData.setUsersInPhotoList(expectedUsersInPhotoList);

        // When
        List<UsersInPhoto> actualUsersInPhotoList = mediaFeedData.getUsersInPhotoList();

        // Then
        assertNotNull(actualUsersInPhotoList);
        assertEquals(expectedUsersInPhotoList.size(), actualUsersInPhotoList.size());
        assertTrue(actualUsersInPhotoList.contains(user1));
        assertTrue(actualUsersInPhotoList.contains(user2));
    }
}
