// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/feed/MediaFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:28:18 GMT 2024
 */
package org.jinstagram.entity.users.feed;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MediaFeed_ESTest extends MediaFeed_ESTest_scaffolding {
    @Test
    public void testToString() {
        MediaFeed mediaFeed = new MediaFeed();
        
        Pagination pagination = new Pagination();
        pagination.setNextUrl("nextUrl");
        pagination.setNextMaxId("nextMaxId");
        mediaFeed.setPagination(pagination);
        
        Meta meta = new Meta();
        meta.setCode(200);
        meta.setErrorType("errorType");
        mediaFeed.setMeta(meta);
        
        List<MediaFeedData> data = new ArrayList<>();
        MediaFeedData mediaFeedData1 = new MediaFeedData();
        mediaFeedData1.setId("1");
        mediaFeedData1.setType("image");
        data.add(mediaFeedData1);
        
        MediaFeedData mediaFeedData2 = new MediaFeedData();
        mediaFeedData2.setId("2");
        mediaFeedData2.setType("video");
        data.add(mediaFeedData2);
        
        mediaFeed.setData(data);
        
        String expected = "MediaFeed [data=[MediaFeedData{id='1', type='image'}, MediaFeedData{id='2', type='video'}], meta=Meta{code=200, errorType='errorType'}, pagination=Pagination{nextUrl='nextUrl', nextMaxId='nextMaxId'}]";
        String actual = mediaFeed.toString();
        
        assertEquals(expected, actual);
    }
}
